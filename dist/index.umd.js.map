{"version":3,"file":"index.umd.js","sources":["../src/lib/VoicemeeterConnector.ts","../src/lib/VoicemeeterParameters.ts","../src/lib/DLLHandler.ts"],"sourcesContent":["/* eslint-disable no-control-regex */\r\nimport koffi from \"koffi\";\r\nimport DLLHandler from \"./DLLHandler\";\r\nimport { Device, VMLibrary, VoiceMeeterTypes } from \"../types/VoicemeeterTypes\";\r\nimport { vmParameters } from \"./VoicemeeterParameters\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nlet libVM: VMLibrary;\r\n/**\r\n * @ignore\r\n */\r\nlet instance: Voicemeeter;\r\n\r\nexport default class Voicemeeter {\r\n\t/**\r\n\t * Initializes the voice meeter dll connection.\r\n\t * This call is neccessary to use the api. It returns a promise with a VoiceMeeter instance\r\n\t */\r\n\tpublic static async init(): Promise<Voicemeeter> {\r\n\t\tconst dllPath = await DLLHandler.getDLLPath();\r\n\r\n\t\treturn new Promise((resolve: (instance: Voicemeeter) => any) => {\r\n\t\t\tif (!instance) {\r\n\t\t\t\tinstance = new Voicemeeter();\r\n\t\t\t}\r\n\t\t\tconst lib = koffi.load(`${dllPath}/VoicemeeterRemote64.dll`);\r\n\t\t\tlibVM = {\r\n\t\t\t\tVBVMR_Login: lib.func(\"long __stdcall VBVMR_Login(void)\"),\r\n\t\t\t\tVBVMR_Logout: lib.func(\"long __stdcall VBVMR_Logout(void)\"),\r\n\t\t\t\tVBVMR_RunVoicemeeter: lib.func(\"long __stdcall VBVMR_RunVoicemeeter(long mode)\"),\r\n\t\t\t\tVBVMR_IsParametersDirty: lib.func(\"long __stdcall VBVMR_IsParametersDirty(void)\"),\r\n\t\t\t\tVBVMR_GetLevel: lib.func(\"long __stdcall VBVMR_GetLevel(long type, long channel, _Out_ float* value)\"),\r\n\t\t\t\tVBVMR_GetParameterFloat: lib.func(\"long __stdcall VBVMR_GetParameterFloat(const char* param, _Out_ float* value)\"),\r\n\t\t\t\tVBVMR_GetParameterStringA: lib.func(\"long __stdcall VBVMR_GetParameterStringA(const char* param, _Out_ char* value)\"),\r\n\t\t\t\tVBVMR_SetParameters: lib.func(\"long __stdcall VBVMR_SetParameters(const char* param)\"),\r\n\t\t\t\tVBVMR_Output_GetDeviceNumber: lib.func(\"long __stdcall VBVMR_Output_GetDeviceNumber(void)\"),\r\n\t\t\t\tVBVMR_Output_GetDeviceDescA: lib.func(\r\n\t\t\t\t\t\"long __stdcall VBVMR_Output_GetDeviceDescA(long index, _Out_ long* type, _Out_ char* name, _Out_ char* hardwareId)\"\r\n\t\t\t\t),\r\n\t\t\t\tVBVMR_Input_GetDeviceNumber: lib.func(\"long __stdcall VBVMR_Input_GetDeviceNumber(void)\"),\r\n\t\t\t\tVBVMR_Input_GetDeviceDescA: lib.func(\r\n\t\t\t\t\t\"long __stdcall VBVMR_Input_GetDeviceDescA(long index, long* type, char* name, char* hardwareId)\"\r\n\t\t\t\t),\r\n\t\t\t\tVBVMR_GetVoicemeeterType: lib.func(\"long __stdcall VBVMR_GetVoicemeeterType(_Out_ long* type)\"),\r\n\t\t\t\tVBVMR_GetVoicemeeterVersion: lib.func(\"long __stdcall VBVMR_GetVoicemeeterVersion(_Out_ long* version)\"),\r\n\t\t\t};\r\n\r\n\t\t\tinstance.isInitialised = true;\r\n\t\t\tresolve(instance);\r\n\t\t});\r\n\t}\r\n\r\n\tpublic isConnected = false;\r\n\tprivate isInitialised = false;\r\n\tprivate outputDevices: Device[] = [];\r\n\tprivate inputDevices: Device[] = [];\r\n\tprivate version = \"\";\r\n\tprivate type: VoiceMeeterTypes;\r\n\tprivate eventPool = [] as Array<() => void>;\r\n\tprivate stringParameters = [\"Label\", \"FadeTo\", \"FadeBy\", \"AppGain\", \"AppMute\", \"name\", \"ip\"];\r\n\r\n\t/**\r\n\t * Starts a connection to VoiceMeeter\r\n\t */\r\n\tpublic connect = () => {\r\n\t\tif (!this.isInitialised) {\r\n\t\t\tthrow new Error(\"Await the initialisation before connect\");\r\n\t\t}\r\n\t\tif (this.isConnected) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (libVM.VBVMR_Login() === 0) {\r\n\t\t\tthis.isConnected = true;\r\n\t\t\tthis.type = this.getVoicemeeterType();\r\n\t\t\tthis.version = this.getVoicemeeterVersion();\r\n\t\t\tsetInterval(this.checkPropertyChange, 10);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.isConnected = false;\r\n\t\tthrow new Error(\"Connection failed\");\r\n\t};\r\n\r\n\t/**\r\n\t * Getter $outputDevices\r\n\t * @return {Device[] }\r\n\t */\r\n\tpublic get $outputDevices(): Device[] {\r\n\t\treturn this.outputDevices;\r\n\t}\r\n\r\n\t/**\r\n\t * Getter $inputDevices\r\n\t * @return {Device[] }\r\n\t */\r\n\tpublic get $inputDevices(): Device[] {\r\n\t\treturn this.inputDevices;\r\n\t}\r\n\r\n\t/**\r\n\t * Getter $version\r\n\t * @return {string }\r\n\t */\r\n\tpublic get $version(): string {\r\n\t\treturn this.version;\r\n\t}\r\n\r\n\t/**\r\n\t * Getter $type\r\n\t * @return {VoiceMeeterTypes}\r\n\t */\r\n\tpublic get $type(): VoiceMeeterTypes {\r\n\t\treturn this.type;\r\n\t}\r\n\r\n\t/**\r\n\t * Terminates the connection to VoiceMeeter\r\n\t */\r\n\tpublic disconnect = () => {\r\n\t\tif (!this.isConnected) {\r\n\t\t\tthrow new Error(\"Not connected \");\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tif (libVM.VBVMR_Logout() === 0) {\r\n\t\t\t\tthis.isConnected = false;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthrow new Error(\"Disconnect failed\");\r\n\t\t} catch {\r\n\t\t\tthrow new Error(\"Disconnect failed\");\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Updates all input and ouput devices\r\n\t */\r\n\tpublic updateDeviceList = () => {\r\n\t\tif (!this.isConnected) {\r\n\t\t\tthrow new Error(\"Not connected \");\r\n\t\t}\r\n\t\tthis.outputDevices = [];\r\n\t\tthis.inputDevices = [];\r\n\t\tconst outputDeviceNumber = libVM.VBVMR_Output_GetDeviceNumber();\r\n\t\tfor (let i = 0; i < outputDeviceNumber; i++) {\r\n\t\t\tconst hardwareIdPtr = Buffer.alloc(256);\r\n\t\t\tconst namePtr = Buffer.alloc(256);\r\n\t\t\tconst typePtr = [0];\r\n\r\n\t\t\tlibVM.VBVMR_Output_GetDeviceDescA(i, typePtr, namePtr, hardwareIdPtr);\r\n\t\t\tthis.outputDevices.push({\r\n\t\t\t\tname: namePtr.toString().replace(/\\u0000+$/g, \"\"),\r\n\t\t\t\thardwareId: hardwareIdPtr.toString().replace(/\\u0000+$/g, \"\"),\r\n\t\t\t\ttype: typePtr[0],\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tconst inputDeviceNumber = libVM.VBVMR_Input_GetDeviceNumber();\r\n\t\tfor (let i = 0; i < inputDeviceNumber; i++) {\r\n\t\t\tconst hardwareIdPtr = Buffer.alloc(256);\r\n\t\t\tconst namePtr = Buffer.alloc(256);\r\n\t\t\tconst typePtr = [0];\r\n\r\n\t\t\tlibVM.VBVMR_Input_GetDeviceDescA(i, typePtr, namePtr, hardwareIdPtr);\r\n\t\t\tthis.inputDevices.push({\r\n\t\t\t\tname: namePtr.toString().replace(/\\u0000+$/g, \"\"),\r\n\t\t\t\thardwareId: hardwareIdPtr.toString().replace(/\\u0000+$/g, \"\"),\r\n\t\t\t\ttype: typePtr[0],\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Returns wheter a parameter has been changed\r\n\t */\r\n\tpublic isParametersDirty = () => {\r\n\t\treturn libVM.VBVMR_IsParametersDirty();\r\n\t};\r\n\r\n\tpublic parameters = vmParameters(this);\r\n\r\n\t/**\r\n\t * @param  {()=>any} fn Function which should be called if something changes\r\n\t */\r\n\tpublic attachChangeEvent = (fn: () => any) => {\r\n\t\tthis.eventPool.push(fn);\r\n\t};\r\n\t/**\r\n\t * @param parameterName Name of the parameter that should be get\r\n\t * @returns {any} Parameter value\r\n\t */\r\n\tpublic getOption = (parameterName: string) => {\r\n\t\tif (!this.isConnected) {\r\n\t\t\tthrow new Error(\"Not correct connected \");\r\n\t\t}\r\n\t\t// Some parameters return string values and require some post-processing, this checks for those parameters\r\n\t\tif (this.stringParameters.some((str) => parameterName.includes(str))) {\r\n\t\t\tconst strPtr = Buffer.alloc(512);\r\n\t\t\tlibVM.VBVMR_GetParameterStringA(parameterName, strPtr);\r\n\t\t\treturn String.fromCharCode\r\n\t\t\t\t.apply(null, strPtr)\r\n\t\t\t\t.split(\"\")\r\n\t\t\t\t.filter((e: string) => {\r\n\t\t\t\t\treturn e !== \"\\0\";\r\n\t\t\t\t})\r\n\t\t\t\t.join(\"\");\r\n\t\t}\r\n\t\tconst valuePtr = [0];\r\n\t\tlibVM.VBVMR_GetParameterFloat(parameterName, valuePtr);\r\n\t\treturn valuePtr[0];\r\n\t};\r\n\t/**\r\n\t * Sets an option.\r\n\t * @param {string} option Option to set\r\n\t */\r\n\tpublic setOption = (option: string) => {\r\n\t\tconst script = Buffer.alloc(option.length + 1);\r\n\t\tscript.fill(0).write(option);\r\n\t\tlibVM.VBVMR_SetParameters(script);\r\n\t\treturn new Promise((resolve) => setTimeout(resolve, 200));\r\n\t};\r\n\r\n\t/**\r\n\t * Checks whether properties has been changed and calls all event listeners\r\n\t */\r\n\tprivate checkPropertyChange = () => {\r\n\t\tif (this.isParametersDirty() === 1) {\r\n\t\t\tthis.eventPool.forEach((eventListener) => {\r\n\t\t\t\teventListener();\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Gets installed voicemeeter type.\r\n\t * Means Voicemeeter(normal,banana,potato)\r\n\t */\r\n\tprivate getVoicemeeterType = (): VoiceMeeterTypes => {\r\n\t\tconst typePtr = [0];\r\n\t\tif (libVM.VBVMR_GetVoicemeeterType(typePtr) !== 0) {\r\n\t\t\tthrow new Error(\"running failed\");\r\n\t\t}\r\n\r\n\t\tswitch (typePtr[0]) {\r\n\t\t\tcase 1: // Voicemeeter\r\n\t\t\t\treturn \"voicemeeter\";\r\n\t\t\tcase 2: // Voicemeeter Banana\r\n\t\t\t\treturn \"voicemeeterBanana\";\r\n\t\t\tcase 3: // Voicemeeter Potato\r\n\t\t\t\treturn \"voicemeeterPotato\";\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(\"Voicemeeter seems not to be installed\");\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Returns the installed voicemeeter version\r\n\t */\r\n\tprivate getVoicemeeterVersion = () => {\r\n\t\tconst versionPtr = [0];\r\n\t\tif (libVM.VBVMR_GetVoicemeeterVersion(versionPtr) !== 0) {\r\n\t\t\tthrow new Error(\"running failed\");\r\n\t\t}\r\n\t\t// For info on this see: https://github.com/mirror/equalizerapo/blob/53d885f7f1a097b457e17a5206b7d60f647877a8/VoicemeeterClient/VoicemeeterRemote.h#L122-L135\r\n\t\tconst version =\r\n\t\t\t`${(versionPtr[0] & 0xff000000) >> 24}` +\r\n\t\t\t`.${(versionPtr[0] & 0x00ff0000) >> 16}` +\r\n\t\t\t`.${(versionPtr[0] & 0x0000ff00) >> 8}` +\r\n\t\t\t`.${versionPtr[0] & 0x000000ff}`;\r\n\t\treturn version;\r\n\t};\r\n\r\n\t/**\r\n\t * Gets realtime audio level see the VoicemeeterRemote API: [VoicemeeterRemote.h GetLevel](https://github.com/mirror/equalizerapo/blob/7aece1b788fce5aa11873f3842a0d01f7c78454b/VoicemeeterClient/VoicemeeterRemote.h#L284),\r\n\t * for more details about the parameters\r\n\t * @param {0|1|2|3} type 0 = pre fader input levels. 1 = post fader input levels. 2= post Mute input levels. 3= output levels\r\n\t * @param channel audio channel zero based index\r\n\t * @returns {float} Current audio level\r\n\t */\r\n\tpublic getLevel = (type: 0 | 1 | 2 | 3, channel: number) => {\r\n\t\tconst levelPtr = [0];\r\n\t\tlibVM.VBVMR_GetLevel(type, channel, levelPtr);\r\n\t\treturn levelPtr[0];\r\n\t};\r\n}\r\n","/*\r\nTop Level:\r\n- Command\r\n- Strip[i]\r\n- Bus[i]\r\n- Fx\r\n- Patch\r\n- Option\r\n- Recorder\r\n- vban\r\n*/\r\n\r\nimport Voicemeeter from \"./VoicemeeterConnector\";\r\n\r\ntype Value = string | number | undefined;\r\n\r\nfunction getOption(vm: Voicemeeter, args: Value[]) {\r\n\treturn vm.getOption(args.join(\".\"));\r\n}\r\n\r\nfunction runOption(vm: Voicemeeter, ...args: Value[]) {\r\n\tif (!vm.isConnected) {\r\n\t\tthrow new Error(\"Not connected \");\r\n\t}\r\n\r\n\tconst value = args[args.length - 1];\r\n\targs.pop(); // Removes undefined value and regular value to join differently\r\n\tif (value !== undefined) vm.setOption(`${args.join(\".\")}=${value}`);\r\n\treturn getOption(vm, args);\r\n}\r\n\r\nexport function vmParameters(vm: Voicemeeter) {\r\n\treturn {\r\n\t\tCommand: {\r\n\t\t\tShutdown: (value?: Value) => runOption(vm, \"Command\", \"Shutdown\", value),\r\n\t\t\tShow: (value?: Value) => runOption(vm, \"Command\", \"Show\", value),\r\n\t\t\tRestart: (value?: Value) => runOption(vm, \"Command\", \"Restart\", value),\r\n\t\t\tEject: (value?: Value) => runOption(vm, \"Command\", \"Eject\", value),\r\n\t\t\tReset: (value?: Value) => runOption(vm, \"Command\", \"Reset\", value),\r\n\t\t\tSave: (value?: Value) => runOption(vm, \"Command\", \"Save\", value),\r\n\t\t\tLoad: (value?: Value) => runOption(vm, \"Command\", \"Load\", value),\r\n\t\t\tLock: (value?: Value) => runOption(vm, \"Command\", \"Lock\", value),\r\n\t\t\tButton: (i: number) => ({\r\n\t\t\t\tState: (value?: Value) => runOption(vm, \"Command\", `Button[${i}]`, \"State\", value),\r\n\t\t\t\tStateOnly: (value?: Value) => runOption(vm, \"Command\", `Button[${i}]`, \"StateOnly\", value),\r\n\t\t\t\tTrigger: (value?: Value) => runOption(vm, \"Command\", `Button[${i}]`, \"Trigger\", value),\r\n\t\t\t\tColor: (value?: Value) => runOption(vm, \"Command\", `Button[${i}]`, \"Color\", value),\r\n\t\t\t}),\r\n\t\t\tDialogShow: {\r\n\t\t\t\tVBANCHAT: (value?: Value) => runOption(vm, \"Command\", \"DialogShow\", \"VBANCHAT\", value),\r\n\t\t\t},\r\n\t\t\tSaveBUSEQ: (j: number) => (value?: Value) => runOption(vm, \"Command\", `SaveBUSEQ[${j}]`, value),\r\n\t\t\tLoadBUSEQ: (j: number) => (value?: Value) => runOption(vm, \"Command\", `LoadBUSEQ[${j}]`, value),\r\n\t\t\tSaveStripEQ: (j: number) => (value?: Value) => runOption(vm, \"Command\", `SaveStripEQ[${j}]`, value),\r\n\t\t\tLoadStripEQ: (j: number) => (value?: Value) => runOption(vm, \"Command\", `LoadStripEQ[${j}]`, value),\r\n\t\t\tPreset: (k: number) => ({\r\n\t\t\t\tRecall: (value?: Value) => runOption(vm, \"Command\", `Preset[${k}]`, \"Recall\", value),\r\n\t\t\t}),\r\n\t\t},\r\n\t\tStrip: (i: number) => ({\r\n\t\t\tMono: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Mono\", value),\r\n\t\t\tMute: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Mute\", value),\r\n\t\t\tSolo: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Solo\", value),\r\n\t\t\tMC: (value?: Value) => runOption(vm, `Strip[${i}]`, \"MC\", value),\r\n\t\t\tGain: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Gain\", value),\r\n\t\t\tGainLayer: (j: number) => (value?: Value) => runOption(vm, `Strip[${i}]`, `GainLayer[${j}]`, value),\r\n\t\t\tPan_x: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Pan_x\", value),\r\n\t\t\tPan_y: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Pan_y\", value),\r\n\t\t\tColor_x: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Color_x\", value),\r\n\t\t\tColor_y: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Color_y\", value),\r\n\t\t\tfx_x: (value?: Value) => runOption(vm, `Strip[${i}]`, \"fx_x\", value),\r\n\t\t\tfx_y: (value?: Value) => runOption(vm, `Strip[${i}]`, \"fx_y\", value),\r\n\t\t\tAudibility: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Audibility\", value),\r\n\t\t\tComp: {\r\n\t\t\t\tGainIn: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Comp\", \"GainIn\", value),\r\n\t\t\t\tRatio: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Comp\", \"Ratio\", value),\r\n\t\t\t\tThreshold: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Comp\", \"Threshold\", value),\r\n\t\t\t\tAttack: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Comp\", \"Attack\", value),\r\n\t\t\t\tRelease: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Comp\", \"Release\", value),\r\n\t\t\t\tKnee: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Comp\", \"Knee\", value),\r\n\t\t\t\tGainOut: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Comp\", \"GainOut\", value),\r\n\t\t\t\tMakeUp: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Comp\", \"MakeUp\", value),\r\n\t\t\t},\r\n\t\t\tGate: {\r\n\t\t\t\tThreshold: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Gate\", \"Threshold\", value),\r\n\t\t\t\tDamping: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Gate\", \"Damping\", value),\r\n\t\t\t\tBPSidechain: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Gate\", \"BPSidechain\", value),\r\n\t\t\t\tAttack: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Gate\", \"Attack\", value),\r\n\t\t\t\tHold: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Gate\", \"Hold\", value),\r\n\t\t\t\tRelease: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Gate\", \"Release\", value),\r\n\t\t\t},\r\n\t\t\tDenoiser: {\r\n\t\t\t\tThreshold: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Denoiser\", \"Threshold\", value),\r\n\t\t\t},\r\n\t\t\tPitch: {\r\n\t\t\t\tOn: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Pitch\", \"On\", value),\r\n\t\t\t\tDryWet: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Pitch\", \"DryWet\", value),\r\n\t\t\t\tPitchValue: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Pitch\", \"PitchValue\", value),\r\n\t\t\t\tLoFormant: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Pitch\", \"LoFormant\", value),\r\n\t\t\t\tMedFormant: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Pitch\", \"MedFormant\", value),\r\n\t\t\t\tHiFormant: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Pitch\", \"HiFormant\", value),\r\n\t\t\t},\r\n\t\t\tKaraoke: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Karaoke\", value),\r\n\t\t\tLimit: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Limit\", value),\r\n\t\t\tEQGain1: (value?: Value) => runOption(vm, `Strip[${i}]`, \"EQGain1\", value),\r\n\t\t\tEQGain2: (value?: Value) => runOption(vm, `Strip[${i}]`, \"EQGain2\", value),\r\n\t\t\tEQGain3: (value?: Value) => runOption(vm, `Strip[${i}]`, \"EQGain3\", value),\r\n\t\t\tLabel: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Label\", value),\r\n\t\t\tA1: (value?: Value) => runOption(vm, `Strip[${i}]`, \"A1\", value),\r\n\t\t\tA2: (value?: Value) => runOption(vm, `Strip[${i}]`, \"A2\", value),\r\n\t\t\tA3: (value?: Value) => runOption(vm, `Strip[${i}]`, \"A3\", value),\r\n\t\t\tA4: (value?: Value) => runOption(vm, `Strip[${i}]`, \"A4\", value),\r\n\t\t\tA5: (value?: Value) => runOption(vm, `Strip[${i}]`, \"A5\", value),\r\n\t\t\tB1: (value?: Value) => runOption(vm, `Strip[${i}]`, \"B1\", value),\r\n\t\t\tB2: (value?: Value) => runOption(vm, `Strip[${i}]`, \"B2\", value),\r\n\t\t\tB3: (value?: Value) => runOption(vm, `Strip[${i}]`, \"B3\", value),\r\n\t\t\tFadeTo: (value?: Value) => runOption(vm, `Strip[${i}]`, \"FadeTo\", value),\r\n\t\t\tFadeBy: (value?: Value) => runOption(vm, `Strip[${i}]`, \"FadeBy\", value),\r\n\t\t\tReverb: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Reverb\", value),\r\n\t\t\tDelay: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Delay\", value),\r\n\t\t\tFx1: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Fx1\", value),\r\n\t\t\tFx2: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Fx2\", value),\r\n\t\t\tPostReverb: (value?: Value) => runOption(vm, `Strip[${i}]`, \"PostReverb\", value),\r\n\t\t\tPostDelay: (value?: Value) => runOption(vm, `Strip[${i}]`, \"PostDelay\", value),\r\n\t\t\tPostFx1: (value?: Value) => runOption(vm, `Strip[${i}]`, \"PostFx1\", value),\r\n\t\t\tPostFx2: (value?: Value) => runOption(vm, `Strip[${i}]`, \"PostFx2\", value),\r\n\t\t\tEQ: {\r\n\t\t\t\ton: (value?: Value) => runOption(vm, `Strip[${i}]`, \"EQ\", \"on\", value),\r\n\t\t\t\tAB: (value?: Value) => runOption(vm, `Strip[${i}]`, \"EQ\", \"AB\", value),\r\n\t\t\t\tchannel: (j: number) => ({\r\n\t\t\t\t\tcell: (k: number) => ({\r\n\t\t\t\t\t\ton: (value?: Value) => runOption(vm, `Strip[${i}]`, \"EQ\", `channel[${j}]`, `cell[${k}]`, \"on\", value),\r\n\t\t\t\t\t\ttype: (value?: Value) => runOption(vm, `Strip[${i}]`, \"EQ\", `channel[${j}]`, `cell[${k}]`, \"type\", value),\r\n\t\t\t\t\t\tf: (value?: Value) => runOption(vm, `Strip[${i}]`, \"EQ\", `channel[${j}]`, `cell[${k}]`, \"f\", value),\r\n\t\t\t\t\t\tgain: (value?: Value) => runOption(vm, `Strip[${i}]`, \"EQ\", `channel[${j}]`, `cell[${k}]`, \"gain\", value),\r\n\t\t\t\t\t\tq: (value?: Value) => runOption(vm, `Strip[${i}]`, \"EQ\", `channel[${j}]`, `cell[${k}]`, \"q\", value),\r\n\t\t\t\t\t}),\r\n\t\t\t\t}),\r\n\t\t\t},\r\n\t\t\tVAIO: (value?: Value) => runOption(vm, `Strip[${i}]`, \"VAIO\", value),\r\n\t\t\tApp: (k: number) => ({\r\n\t\t\t\tGain: (value?: Value) => runOption(vm, `Strip[${i}]`, `App[${k}]`, \"Gain\", value),\r\n\t\t\t\tMute: (value?: Value) => runOption(vm, `Strip[${i}]`, `App[${k}]`, \"Mute\", value),\r\n\t\t\t}),\r\n\t\t\tAppGain: (value?: Value) => runOption(vm, `Strip[${i}]`, \"AppGain\", value),\r\n\t\t\tAppMute: (value?: Value) => runOption(vm, `Strip[${i}]`, \"AppMute\", value),\r\n\t\t\tdevice: {\r\n\t\t\t\tname: (value?: Value) => runOption(vm, `Strip[${i}]`, \"device\", \"name\", value),\r\n\t\t\t\tsr: (value?: Value) => runOption(vm, `Strip[${i}]`, \"device\", \"sr\", value),\r\n\t\t\t\twdm: (value?: Value) => runOption(vm, `Strip[${i}]`, \"device\", \"wdm\", value),\r\n\t\t\t\tks: (value?: Value) => runOption(vm, `Strip[${i}]`, \"device\", \"ks\", value),\r\n\t\t\t\tmme: (value?: Value) => runOption(vm, `Strip[${i}]`, \"device\", \"mme\", value),\r\n\t\t\t\tasio: (value?: Value) => runOption(vm, `Strip[${i}]`, \"device\", \"asio\", value),\r\n\t\t\t},\r\n\t\t}),\r\n\t\tBus: (i: number) => ({\r\n\t\t\tMono: (value?: Value) => runOption(vm, `Bus[${i}]`, \"Mono\", value),\r\n\t\t\tMute: (value?: Value) => runOption(vm, `Bus[${i}]`, \"Mute\", value),\r\n\t\t\tEQ: {\r\n\t\t\t\ton: (value?: Value) => runOption(vm, `Bus[${i}]`, \"EQ\", \"on\", value),\r\n\t\t\t\tAB: (value?: Value) => runOption(vm, `Bus[${i}]`, \"EQ\", \"AB\", value),\r\n\t\t\t\tchannel: (j: number) => ({\r\n\t\t\t\t\tcell: (k: number) => ({\r\n\t\t\t\t\t\ton: (value?: Value) => runOption(vm, `Bus[${i}]`, \"EQ\", `channel[${j}]`, `cell[${k}]`, \"on\", value),\r\n\t\t\t\t\t\ttype: (value?: Value) => runOption(vm, `Bus[${i}]`, \"EQ\", `channel[${j}]`, `cell[${k}]`, \"type\", value),\r\n\t\t\t\t\t\tf: (value?: Value) => runOption(vm, `Bus[${i}]`, \"EQ\", `channel[${j}]`, `cell[${k}]`, \"f\", value),\r\n\t\t\t\t\t\tgain: (value?: Value) => runOption(vm, `Bus[${i}]`, \"EQ\", `channel[${j}]`, `cell[${k}]`, \"gain\", value),\r\n\t\t\t\t\t\tq: (value?: Value) => runOption(vm, `Bus[${i}]`, \"EQ\", `channel[${j}]`, `cell[${k}]`, \"q\", value),\r\n\t\t\t\t\t}),\r\n\t\t\t\t}),\r\n\t\t\t},\r\n\t\t\tGain: (value?: Value) => runOption(vm, `Bus[${i}]`, \"Gain\", value),\r\n\t\t\tLabel: (value?: Value) => runOption(vm, `Bus[${i}]`, \"Label\", value),\r\n\t\t\tmode: {\r\n\t\t\t\tnormal: (value?: Value) => runOption(vm, `Bus[${i}]`, \"mode\", \"normal\", value),\r\n\t\t\t\tAmix: (value?: Value) => runOption(vm, `Bus[${i}]`, \"mode\", \"Amix\", value),\r\n\t\t\t\tBmix: (value?: Value) => runOption(vm, `Bus[${i}]`, \"mode\", \"Bmix\", value),\r\n\t\t\t\tRepeat: (value?: Value) => runOption(vm, `Bus[${i}]`, \"mode\", \"Repeat\", value),\r\n\t\t\t\tComposite: (value?: Value) => runOption(vm, `Bus[${i}]`, \"mode\", \"Composite\", value),\r\n\t\t\t\tTVMix: (value?: Value) => runOption(vm, `Bus[${i}]`, \"mode\", \"TVMix\", value),\r\n\t\t\t\tUpMix21: (value?: Value) => runOption(vm, `Bus[${i}]`, \"mode\", \"UpMix21\", value),\r\n\t\t\t\tUpMix41: (value?: Value) => runOption(vm, `Bus[${i}]`, \"mode\", \"UpMix41\", value),\r\n\t\t\t\tUpMix61: (value?: Value) => runOption(vm, `Bus[${i}]`, \"mode\", \"UpMix61\", value),\r\n\t\t\t\tCenterOnly: (value?: Value) => runOption(vm, `Bus[${i}]`, \"mode\", \"CenterOnly\", value),\r\n\t\t\t\tLFEOnly: (value?: Value) => runOption(vm, `Bus[${i}]`, \"mode\", \"LFEOnly\", value),\r\n\t\t\t\tRearOnly: (value?: Value) => runOption(vm, `Bus[${i}]`, \"mode\", \"RearOnly\", value),\r\n\t\t\t},\r\n\t\t\tFadeTo: (value?: Value) => runOption(vm, `Bus[${i}]`, \"FadeTo\", value),\r\n\t\t\tFadeBy: (value?: Value) => runOption(vm, `Bus[${i}]`, \"FadeBy\", value),\r\n\t\t\tSel: (value?: Value) => runOption(vm, `Bus[${i}]`, \"Sel\", value),\r\n\t\t\tReturnReverb: (value?: Value) => runOption(vm, `Bus[${i}]`, \"ReturnReverb\", value),\r\n\t\t\tReturnDelay: (value?: Value) => runOption(vm, `Bus[${i}]`, \"ReturnDelay\", value),\r\n\t\t\tReturnFx1: (value?: Value) => runOption(vm, `Bus[${i}]`, \"ReturnFx1\", value),\r\n\t\t\tReturnFx2: (value?: Value) => runOption(vm, `Bus[${i}]`, \"ReturnFx2\", value),\r\n\t\t\tMonitor: (value?: Value) => runOption(vm, `Bus[${i}]`, \"Monitor\", value),\r\n\t\t\tVAIO: (value?: Value) => runOption(vm, `Bus[${i}]`, \"VAIO\", value),\r\n\t\t\tdevice: {\r\n\t\t\t\tname: (value?: Value) => runOption(vm, `Bus[${i}]`, \"device\", \"name\", value),\r\n\t\t\t\tsr: (value?: Value) => runOption(vm, `Bus[${i}]`, \"device\", \"sr\", value),\r\n\t\t\t\twdm: (value?: Value) => runOption(vm, `Bus[${i}]`, \"device\", \"wdm\", value),\r\n\t\t\t\tks: (value?: Value) => runOption(vm, `Bus[${i}]`, \"device\", \"ks\", value),\r\n\t\t\t\tmme: (value?: Value) => runOption(vm, `Bus[${i}]`, \"device\", \"mme\", value),\r\n\t\t\t\tasio: (value?: Value) => runOption(vm, `Bus[${i}]`, \"device\", \"asio\", value),\r\n\t\t\t},\r\n\t\t}),\r\n\t\tFx: {\r\n\t\t\tReverb: {\r\n\t\t\t\tOn: (value?: Value) => runOption(vm, \"Fx\", \"Reverb\", \"On\", value),\r\n\t\t\t\tAB: (value?: Value) => runOption(vm, \"Fx\", \"Reverb\", \"AB\", value),\r\n\t\t\t},\r\n\t\t\tDelay: {\r\n\t\t\t\tOn: (value?: Value) => runOption(vm, \"Fx\", \"Delay\", \"On\", value),\r\n\t\t\t\tAB: (value?: Value) => runOption(vm, \"Fx\", \"Delay\", \"AB\", value),\r\n\t\t\t},\r\n\t\t},\r\n\t\tpatch: {\r\n\t\t\tasio: (i: number) => (value?: Value) => runOption(vm, \"patch\", `asio[${i}]`, value),\r\n\t\t\tOutA2: (i: number) => (value?: Value) => runOption(vm, \"patch\", `OutA2[${i}]`, value),\r\n\t\t\tOutA3: (i: number) => (value?: Value) => runOption(vm, \"patch\", `OutA3[${i}]`, value),\r\n\t\t\tOutA4: (i: number) => (value?: Value) => runOption(vm, \"patch\", `OutA4[${i}]`, value),\r\n\t\t\tOutA5: (i: number) => (value?: Value) => runOption(vm, \"patch\", `OutA5[${i}]`, value),\r\n\t\t\tcomposite: (j: number) => (value?: Value) => runOption(vm, \"Patch\", `composite[${j}]`, value),\r\n\t\t\tinsert: (k: number) => (value?: Value) => runOption(vm, \"Patch\", `insert[${k}]`, value),\r\n\t\t\tPostFaderComposite: (value?: Value) => runOption(vm, \"Patch\", \"PostFaderComposite\", value),\r\n\t\t\tPostFxInsert: (value?: Value) => runOption(vm, \"Patch\", \"PostFxInsert\", value),\r\n\t\t},\r\n\t\tOption: {\r\n\t\t\tsr: (value?: Value) => runOption(vm, \"Option\", \"sr\", value),\r\n\t\t\tASIOsr: (value?: Value) => runOption(vm, \"Option\", \"ASIOsr\", value),\r\n\t\t\tdelay: (i: number) => (value?: Value) => runOption(vm, \"Option\", `delay[${i}]`, value),\r\n\t\t\tbuffer: {\r\n\t\t\t\tmme: (value?: Value) => runOption(vm, \"Option\", \"buffer\", \"mme\", value),\r\n\t\t\t\twdm: (value?: Value) => runOption(vm, \"Option\", \"buffer\", \"wdm\", value),\r\n\t\t\t\tks: (value?: Value) => runOption(vm, \"Option\", \"buffer\", \"ks\", value),\r\n\t\t\t\tasio: (value?: Value) => runOption(vm, \"Option\", \"buffer\", \"asio\", value),\r\n\t\t\t},\r\n\t\t\tmode: {\r\n\t\t\t\texclusif: (value?: Value) => runOption(vm, \"Option\", \"mode\", \"exclusif\", value),\r\n\t\t\t\tswift: (value?: Value) => runOption(vm, \"Option\", \"mode\", \"swift\", value),\r\n\t\t\t},\r\n\t\t\tMonitorOnSEL: (value?: Value) => runOption(vm, \"Option\", \"MonitorOnSEL\", value),\r\n\t\t\tSliderMode: (value?: Value) => runOption(vm, \"Option\", \"SliderMode\", value),\r\n\t\t},\r\n\t\trecorder: {\r\n\t\t\tstop: (value?: Value) => runOption(vm, \"recorder\", \"stop\", value),\r\n\t\t\tplay: (value?: Value) => runOption(vm, \"recorder\", \"play\", value),\r\n\t\t\treplay: (value?: Value) => runOption(vm, \"recorder\", \"replay\", value),\r\n\t\t\tff: (value?: Value) => runOption(vm, \"recorder\", \"ff\", value),\r\n\t\t\trew: (value?: Value) => runOption(vm, \"recorder\", \"rew\", value),\r\n\t\t\tA1: (value?: Value) => runOption(vm, \"recorder\", \"A1\", value),\r\n\t\t\tA2: (value?: Value) => runOption(vm, \"recorder\", \"A2\", value),\r\n\t\t\tA3: (value?: Value) => runOption(vm, \"recorder\", \"A3\", value),\r\n\t\t\tA4: (value?: Value) => runOption(vm, \"recorder\", \"A4\", value),\r\n\t\t\tA5: (value?: Value) => runOption(vm, \"recorder\", \"A5\", value),\r\n\t\t\tB1: (value?: Value) => runOption(vm, \"recorder\", \"B1\", value),\r\n\t\t\tB2: (value?: Value) => runOption(vm, \"recorder\", \"B2\", value),\r\n\t\t\tB3: (value?: Value) => runOption(vm, \"recorder\", \"B3\", value),\r\n\t\t\trecord: (value?: Value) => runOption(vm, \"recorder\", \"record\", value),\r\n\t\t\tpause: (value?: Value) => runOption(vm, \"recorder\", \"pause\", value),\r\n\t\t\tgoto: (value?: Value) => runOption(vm, \"Recorder\", \"goto\", value),\r\n\t\t\tload: (value?: Value) => runOption(vm, \"Recorder\", \"load\", value),\r\n\t\t\tsamplerate: (value?: Value) => runOption(vm, \"Recorder\", \"samplerate\", value),\r\n\t\t\tArmStrip: (i: number) => (value?: Value) => runOption(vm, \"Recorder\", `ArmStrip(${i})`, value),\r\n\t\t\tArmBus: (i: number) => (value?: Value) => runOption(vm, \"Recorder\", `ArmBus(${i})`, value),\r\n\t\t\tmode: {\r\n\t\t\t\trecbus: (value?: Value) => runOption(vm, \"Recorder\", \"mode\", \"recbus\", value),\r\n\t\t\t\tPlayOnLoad: (value?: Value) => runOption(vm, \"Recorder\", \"mode\", \"PlayOnLoad\", value),\r\n\t\t\t\tLoop: (value?: Value) => runOption(vm, \"Recorder\", \"mode\", \"Loop\", value),\r\n\t\t\t\tMultiTrack: (value?: Value) => runOption(vm, \"Recorder\", \"mode\", \"MultiTrack\", value),\r\n\t\t\t},\r\n\t\t\tbitResolution: (value?: Value) => runOption(vm, \"Recorder\", \"bitResolution\", value),\r\n\t\t\tChannel: (value?: Value) => runOption(vm, \"Recorder\", \"Channel\", value),\r\n\t\t\tkbps: (value?: Value) => runOption(vm, \"Recorder\", \"kbps\", value),\r\n\t\t\tFileType: (value?: Value) => runOption(vm, \"Recorder\", \"FileType\", value),\r\n\t\t\tgain: (value?: Value) => runOption(vm, \"Recorder\", \"gain\", value),\r\n\t\t},\r\n\t\tvban: {\r\n\t\t\tEnable: (value?: Value) => runOption(vm, \"vban\", \"Enable\", value),\r\n\t\t\tinstream: (i: number) => ({\r\n\t\t\t\ton: (value?: Value) => runOption(vm, \"vban\", `instream[${i}]`, \"on\", value),\r\n\t\t\t\tname: (value?: Value) => runOption(vm, \"vban\", `instream[${i}]`, \"name\", value),\r\n\t\t\t\tip: (value?: Value) => runOption(vm, \"vban\", `instream[${i}]`, \"ip\", value),\r\n\t\t\t\tport: (value?: Value) => runOption(vm, \"vban\", `instream[${i}]`, \"port\", value),\r\n\t\t\t\tsr: (value?: Value) => runOption(vm, \"vban\", `instream[${i}]`, \"sr\", value),\r\n\t\t\t\tchannel: (value?: Value) => runOption(vm, \"vban\", `instream[${i}]`, \"channel\", value),\r\n\t\t\t\tbit: (value?: Value) => runOption(vm, \"vban\", `instream[${i}]`, \"bit\", value),\r\n\t\t\t\tquality: (value?: Value) => runOption(vm, \"vban\", `instream[${i}]`, \"quality\", value),\r\n\t\t\t\troute: (value?: Value) => runOption(vm, \"vban\", `instream[${i}]`, \"route\", value),\r\n\t\t\t}),\r\n\t\t\toutstream: (i: number) => ({\r\n\t\t\t\ton: (value?: Value) => runOption(vm, \"vban\", `outstream[${i}]`, \"on\", value),\r\n\t\t\t\tname: (value?: Value) => runOption(vm, \"vban\", `outstream[${i}]`, \"name\", value),\r\n\t\t\t\tip: (value?: Value) => runOption(vm, \"vban\", `outstream[${i}]`, \"ip\", value),\r\n\t\t\t\tport: (value?: Value) => runOption(vm, \"vban\", `outstream[${i}]`, \"port\", value),\r\n\t\t\t\tsr: (value?: Value) => runOption(vm, \"vban\", `outstream[${i}]`, \"sr\", value),\r\n\t\t\t\tchannel: (value?: Value) => runOption(vm, \"vban\", `outstream[${i}]`, \"channel\", value),\r\n\t\t\t\tbit: (value?: Value) => runOption(vm, \"vban\", `outstream[${i}]`, \"bit\", value),\r\n\t\t\t\tquality: (value?: Value) => runOption(vm, \"vban\", `outstream[${i}]`, \"quality\", value),\r\n\t\t\t\troute: (value?: Value) => runOption(vm, \"vban\", `outstream[${i}]`, \"route\", value),\r\n\t\t\t}),\r\n\t\t},\r\n\t};\r\n}\r\n","import Registry from \"winreg\";\r\n\r\nconst DLLHandler = {\r\n\tgetDLLPath: async (): Promise<any> => {\r\n\t\tconst regKey = new Registry({\r\n\t\t\thive: Registry.HKLM,\r\n\t\t\tkey: \"\\\\SOFTWARE\\\\WOW6432Node\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Uninstall\\\\VB:Voicemeeter {17359A74-1236-5467}\",\r\n\t\t});\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tregKey.values((err: any, items: any) => {\r\n\t\t\t\tif (err) {\r\n\t\t\t\t\tthrow new Error(err);\r\n\t\t\t\t}\r\n\t\t\t\tconst unistallerPath = items.find((i: any) => i.name === \"UninstallString\").value;\r\n\t\t\t\tconst fileNameIndex = unistallerPath.lastIndexOf(\"\\\\\");\r\n\t\t\t\tresolve(unistallerPath.slice(0, fileNameIndex));\r\n\t\t\t});\r\n\t\t});\r\n\t},\r\n};\r\n\r\nexport default DLLHandler;\r\n"],"names":["libVM","instance","runOption","vm","args","slice","call","arguments","isConnected","Error","value","length","pop","undefined","setOption","join","getOption","Voicemeeter","_this","isInitialised","outputDevices","inputDevices","version","type","eventPool","stringParameters","connect","VBVMR_Login","getVoicemeeterType","getVoicemeeterVersion","setInterval","checkPropertyChange","disconnect","VBVMR_Logout","_unused","updateDeviceList","outputDeviceNumber","VBVMR_Output_GetDeviceNumber","i","hardwareIdPtr","Buffer","alloc","namePtr","typePtr","VBVMR_Output_GetDeviceDescA","push","name","toString","replace","hardwareId","inputDeviceNumber","VBVMR_Input_GetDeviceNumber","VBVMR_Input_GetDeviceDescA","isParametersDirty","VBVMR_IsParametersDirty","parameters","this","Command","Shutdown","Show","Restart","Eject","Reset","Save","Load","Lock","Button","State","StateOnly","Trigger","Color","DialogShow","VBANCHAT","SaveBUSEQ","j","LoadBUSEQ","SaveStripEQ","LoadStripEQ","Preset","k","Recall","Strip","Mono","Mute","Solo","MC","Gain","GainLayer","Pan_x","Pan_y","Color_x","Color_y","fx_x","fx_y","Audibility","Comp","GainIn","Ratio","Threshold","Attack","Release","Knee","GainOut","MakeUp","Gate","Damping","BPSidechain","Hold","Denoiser","Pitch","On","DryWet","PitchValue","LoFormant","MedFormant","HiFormant","Karaoke","Limit","EQGain1","EQGain2","EQGain3","Label","A1","A2","A3","A4","A5","B1","B2","B3","FadeTo","FadeBy","Reverb","Delay","Fx1","Fx2","PostReverb","PostDelay","PostFx1","PostFx2","EQ","on","AB","channel","cell","f","gain","q","VAIO","App","AppGain","AppMute","device","sr","wdm","ks","mme","asio","Bus","mode","normal","Amix","Bmix","Repeat","Composite","TVMix","UpMix21","UpMix41","UpMix61","CenterOnly","LFEOnly","RearOnly","Sel","ReturnReverb","ReturnDelay","ReturnFx1","ReturnFx2","Monitor","Fx","patch","OutA2","OutA3","OutA4","OutA5","composite","insert","PostFaderComposite","PostFxInsert","Option","ASIOsr","delay","buffer","exclusif","swift","MonitorOnSEL","SliderMode","recorder","stop","play","replay","ff","rew","record","pause","goto","load","samplerate","ArmStrip","ArmBus","recbus","PlayOnLoad","Loop","MultiTrack","bitResolution","Channel","kbps","FileType","vban","Enable","instream","ip","port","bit","quality","route","outstream","attachChangeEvent","fn","parameterName","some","str","includes","strPtr","VBVMR_GetParameterStringA","String","fromCharCode","apply","split","filter","e","valuePtr","VBVMR_GetParameterFloat","option","script","fill","write","VBVMR_SetParameters","Promise","resolve","setTimeout","forEach","eventListener","VBVMR_GetVoicemeeterType","versionPtr","VBVMR_GetVoicemeeterVersion","getLevel","levelPtr","VBVMR_GetLevel","init","regKey","Registry","hive","HKLM","key","values","err","items","unistallerPath","find","fileNameIndex","lastIndexOf","reject","DLLHandler","then","dllPath","lib","koffi","func","VBVMR_RunVoicemeeter","get"],"mappings":"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"}