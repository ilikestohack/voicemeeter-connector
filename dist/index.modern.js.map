{"version":3,"file":"index.modern.js","sources":["../src/lib/VoicemeeterParameters.ts","../src/lib/VoicemeeterConnector.ts","../src/lib/DLLHandler.ts"],"sourcesContent":["/*\r\nTop Level:\r\n- Command\r\n- Strip[i]\r\n- Bus[i]\r\n- Fx\r\n- Patch\r\n- Option\r\n- Recorder\r\n- vban\r\n*/\r\n\r\nimport Voicemeeter from \"./VoicemeeterConnector\";\r\n\r\ntype Value = string | number | undefined;\r\n\r\nfunction getOption(vm: Voicemeeter, args: Value[]) {\r\n\treturn vm.getOption(args.join(\".\"));\r\n}\r\n\r\nfunction runOption(vm: Voicemeeter, ...args: Value[]) {\r\n\tif (!vm.isConnected) {\r\n\t\tthrow new Error(\"Not connected \");\r\n\t}\r\n\r\n\tconst value = args[args.length - 1];\r\n\targs.pop(); // Removes undefined value and regular value to join differently\r\n\tif (value !== undefined) vm.setOption(`${args.join(\".\")}=${value}`);\r\n\treturn getOption(vm, args);\r\n}\r\n\r\nexport function vmParameters(vm: Voicemeeter) {\r\n\treturn {\r\n\t\tCommand: {\r\n\t\t\tShutdown: (value?: Value) => runOption(vm, \"Command\", \"Shutdown\", value),\r\n\t\t\tShow: (value?: Value) => runOption(vm, \"Command\", \"Show\", value),\r\n\t\t\tRestart: (value?: Value) => runOption(vm, \"Command\", \"Restart\", value),\r\n\t\t\tEject: (value?: Value) => runOption(vm, \"Command\", \"Eject\", value),\r\n\t\t\tReset: (value?: Value) => runOption(vm, \"Command\", \"Reset\", value),\r\n\t\t\tSave: (value?: Value) => runOption(vm, \"Command\", \"Save\", value),\r\n\t\t\tLoad: (value?: Value) => runOption(vm, \"Command\", \"Load\", value),\r\n\t\t\tLock: (value?: Value) => runOption(vm, \"Command\", \"Lock\", value),\r\n\t\t\tButton: (i: number) => ({\r\n\t\t\t\tState: (value?: Value) => runOption(vm, \"Command\", `Button[${i}]`, \"State\", value),\r\n\t\t\t\tStateOnly: (value?: Value) => runOption(vm, \"Command\", `Button[${i}]`, \"StateOnly\", value),\r\n\t\t\t\tTrigger: (value?: Value) => runOption(vm, \"Command\", `Button[${i}]`, \"Trigger\", value),\r\n\t\t\t\tColor: (value?: Value) => runOption(vm, \"Command\", `Button[${i}]`, \"Color\", value),\r\n\t\t\t}),\r\n\t\t\tDialogShow: {\r\n\t\t\t\tVBANCHAT: (value?: Value) => runOption(vm, \"Command\", \"DialogShow\", \"VBANCHAT\", value),\r\n\t\t\t},\r\n\t\t\tSaveBUSEQ: (j: number) => (value?: Value) => runOption(vm, \"Command\", `SaveBUSEQ[${j}]`, value),\r\n\t\t\tLoadBUSEQ: (j: number) => (value?: Value) => runOption(vm, \"Command\", `LoadBUSEQ[${j}]`, value),\r\n\t\t\tSaveStripEQ: (j: number) => (value?: Value) => runOption(vm, \"Command\", `SaveStripEQ[${j}]`, value),\r\n\t\t\tLoadStripEQ: (j: number) => (value?: Value) => runOption(vm, \"Command\", `LoadStripEQ[${j}]`, value),\r\n\t\t\tPreset: (k: number) => ({\r\n\t\t\t\tRecall: (value?: Value) => runOption(vm, \"Command\", `Preset[${k}]`, \"Recall\", value),\r\n\t\t\t}),\r\n\t\t},\r\n\t\tStrip: (i: number) => ({\r\n\t\t\tMono: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Mono\", value),\r\n\t\t\tMute: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Mute\", value),\r\n\t\t\tSolo: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Solo\", value),\r\n\t\t\tMC: (value?: Value) => runOption(vm, `Strip[${i}]`, \"MC\", value),\r\n\t\t\tGain: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Gain\", value),\r\n\t\t\tGainLayer: (j: number) => (value?: Value) => runOption(vm, `Strip[${i}]`, `GainLayer[${j}]`, value),\r\n\t\t\tPan_x: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Pan_x\", value),\r\n\t\t\tPan_y: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Pan_y\", value),\r\n\t\t\tColor_x: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Color_x\", value),\r\n\t\t\tColor_y: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Color_y\", value),\r\n\t\t\tfx_x: (value?: Value) => runOption(vm, `Strip[${i}]`, \"fx_x\", value),\r\n\t\t\tfx_y: (value?: Value) => runOption(vm, `Strip[${i}]`, \"fx_y\", value),\r\n\t\t\tAudibility: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Audibility\", value),\r\n\t\t\tComp: {\r\n\t\t\t\tGainIn: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Comp\", \"GainIn\", value),\r\n\t\t\t\tRatio: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Comp\", \"Ratio\", value),\r\n\t\t\t\tThreshold: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Comp\", \"Threshold\", value),\r\n\t\t\t\tAttack: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Comp\", \"Attack\", value),\r\n\t\t\t\tRelease: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Comp\", \"Release\", value),\r\n\t\t\t\tKnee: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Comp\", \"Knee\", value),\r\n\t\t\t\tGainOut: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Comp\", \"GainOut\", value),\r\n\t\t\t\tMakeUp: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Comp\", \"MakeUp\", value),\r\n\t\t\t},\r\n\t\t\tGate: {\r\n\t\t\t\tThreshold: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Gate\", \"Threshold\", value),\r\n\t\t\t\tDamping: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Gate\", \"Damping\", value),\r\n\t\t\t\tBPSidechain: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Gate\", \"BPSidechain\", value),\r\n\t\t\t\tAttack: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Gate\", \"Attack\", value),\r\n\t\t\t\tHold: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Gate\", \"Hold\", value),\r\n\t\t\t\tRelease: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Gate\", \"Release\", value),\r\n\t\t\t},\r\n\t\t\tDenoiser: {\r\n\t\t\t\tThreshold: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Denoiser\", \"Threshold\", value),\r\n\t\t\t},\r\n\t\t\tPitch: {\r\n\t\t\t\tOn: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Pitch\", \"On\", value),\r\n\t\t\t\tDryWet: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Pitch\", \"DryWet\", value),\r\n\t\t\t\tPitchValue: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Pitch\", \"PitchValue\", value),\r\n\t\t\t\tLoFormant: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Pitch\", \"LoFormant\", value),\r\n\t\t\t\tMedFormant: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Pitch\", \"MedFormant\", value),\r\n\t\t\t\tHiFormant: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Pitch\", \"HiFormant\", value),\r\n\t\t\t},\r\n\t\t\tKaraoke: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Karaoke\", value),\r\n\t\t\tLimit: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Limit\", value),\r\n\t\t\tEQGain1: (value?: Value) => runOption(vm, `Strip[${i}]`, \"EQGain1\", value),\r\n\t\t\tEQGain2: (value?: Value) => runOption(vm, `Strip[${i}]`, \"EQGain2\", value),\r\n\t\t\tEQGain3: (value?: Value) => runOption(vm, `Strip[${i}]`, \"EQGain3\", value),\r\n\t\t\tLabel: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Label\", value),\r\n\t\t\tA1: (value?: Value) => runOption(vm, `Strip[${i}]`, \"A1\", value),\r\n\t\t\tA2: (value?: Value) => runOption(vm, `Strip[${i}]`, \"A2\", value),\r\n\t\t\tA3: (value?: Value) => runOption(vm, `Strip[${i}]`, \"A3\", value),\r\n\t\t\tA4: (value?: Value) => runOption(vm, `Strip[${i}]`, \"A4\", value),\r\n\t\t\tA5: (value?: Value) => runOption(vm, `Strip[${i}]`, \"A5\", value),\r\n\t\t\tB1: (value?: Value) => runOption(vm, `Strip[${i}]`, \"B1\", value),\r\n\t\t\tB2: (value?: Value) => runOption(vm, `Strip[${i}]`, \"B2\", value),\r\n\t\t\tB3: (value?: Value) => runOption(vm, `Strip[${i}]`, \"B3\", value),\r\n\t\t\tFadeTo: (value?: Value) => runOption(vm, `Strip[${i}]`, \"FadeTo\", value),\r\n\t\t\tFadeBy: (value?: Value) => runOption(vm, `Strip[${i}]`, \"FadeBy\", value),\r\n\t\t\tReverb: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Reverb\", value),\r\n\t\t\tDelay: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Delay\", value),\r\n\t\t\tFx1: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Fx1\", value),\r\n\t\t\tFx2: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Fx2\", value),\r\n\t\t\tPostReverb: (value?: Value) => runOption(vm, `Strip[${i}]`, \"PostReverb\", value),\r\n\t\t\tPostDelay: (value?: Value) => runOption(vm, `Strip[${i}]`, \"PostDelay\", value),\r\n\t\t\tPostFx1: (value?: Value) => runOption(vm, `Strip[${i}]`, \"PostFx1\", value),\r\n\t\t\tPostFx2: (value?: Value) => runOption(vm, `Strip[${i}]`, \"PostFx2\", value),\r\n\t\t\tEQ: {\r\n\t\t\t\ton: (value?: Value) => runOption(vm, `Strip[${i}]`, \"EQ\", \"on\", value),\r\n\t\t\t\tAB: (value?: Value) => runOption(vm, `Strip[${i}]`, \"EQ\", \"AB\", value),\r\n\t\t\t\tchannel: (j: number) => ({\r\n\t\t\t\t\tcell: (k: number) => ({\r\n\t\t\t\t\t\ton: (value?: Value) => runOption(vm, `Strip[${i}]`, \"EQ\", `channel[${j}]`, `cell[${k}]`, \"on\", value),\r\n\t\t\t\t\t\ttype: (value?: Value) => runOption(vm, `Strip[${i}]`, \"EQ\", `channel[${j}]`, `cell[${k}]`, \"type\", value),\r\n\t\t\t\t\t\tf: (value?: Value) => runOption(vm, `Strip[${i}]`, \"EQ\", `channel[${j}]`, `cell[${k}]`, \"f\", value),\r\n\t\t\t\t\t\tgain: (value?: Value) => runOption(vm, `Strip[${i}]`, \"EQ\", `channel[${j}]`, `cell[${k}]`, \"gain\", value),\r\n\t\t\t\t\t\tq: (value?: Value) => runOption(vm, `Strip[${i}]`, \"EQ\", `channel[${j}]`, `cell[${k}]`, \"q\", value),\r\n\t\t\t\t\t}),\r\n\t\t\t\t}),\r\n\t\t\t},\r\n\t\t\tVAIO: (value?: Value) => runOption(vm, `Strip[${i}]`, \"VAIO\", value),\r\n\t\t\tApp: (k: number) => ({\r\n\t\t\t\tGain: (value?: Value) => runOption(vm, `Strip[${i}]`, `App[${k}]`, \"Gain\", value),\r\n\t\t\t\tMute: (value?: Value) => runOption(vm, `Strip[${i}]`, `App[${k}]`, \"Mute\", value),\r\n\t\t\t}),\r\n\t\t\tAppGain: (value?: Value) => runOption(vm, `Strip[${i}]`, \"AppGain\", value),\r\n\t\t\tAppMute: (value?: Value) => runOption(vm, `Strip[${i}]`, \"AppMute\", value),\r\n\t\t\tdevice: {\r\n\t\t\t\tname: (value?: Value) => runOption(vm, `Strip[${i}]`, \"device\", \"name\", value),\r\n\t\t\t\tsr: (value?: Value) => runOption(vm, `Strip[${i}]`, \"device\", \"sr\", value),\r\n\t\t\t\twdm: (value?: Value) => runOption(vm, `Strip[${i}]`, \"device\", \"wdm\", value),\r\n\t\t\t\tks: (value?: Value) => runOption(vm, `Strip[${i}]`, \"device\", \"ks\", value),\r\n\t\t\t\tmme: (value?: Value) => runOption(vm, `Strip[${i}]`, \"device\", \"mme\", value),\r\n\t\t\t\tasio: (value?: Value) => runOption(vm, `Strip[${i}]`, \"device\", \"asio\", value),\r\n\t\t\t},\r\n\t\t}),\r\n\t\tBus: (i: number) => ({\r\n\t\t\tMono: (value?: Value) => runOption(vm, `Bus[${i}]`, \"Mono\", value),\r\n\t\t\tMute: (value?: Value) => runOption(vm, `Bus[${i}]`, \"Mute\", value),\r\n\t\t\tEQ: {\r\n\t\t\t\ton: (value?: Value) => runOption(vm, `Bus[${i}]`, \"EQ\", \"on\", value),\r\n\t\t\t\tAB: (value?: Value) => runOption(vm, `Bus[${i}]`, \"EQ\", \"AB\", value),\r\n\t\t\t\tchannel: (j: number) => ({\r\n\t\t\t\t\tcell: (k: number) => ({\r\n\t\t\t\t\t\ton: (value?: Value) => runOption(vm, `Bus[${i}]`, \"EQ\", `channel[${j}]`, `cell[${k}]`, \"on\", value),\r\n\t\t\t\t\t\ttype: (value?: Value) => runOption(vm, `Bus[${i}]`, \"EQ\", `channel[${j}]`, `cell[${k}]`, \"type\", value),\r\n\t\t\t\t\t\tf: (value?: Value) => runOption(vm, `Bus[${i}]`, \"EQ\", `channel[${j}]`, `cell[${k}]`, \"f\", value),\r\n\t\t\t\t\t\tgain: (value?: Value) => runOption(vm, `Bus[${i}]`, \"EQ\", `channel[${j}]`, `cell[${k}]`, \"gain\", value),\r\n\t\t\t\t\t\tq: (value?: Value) => runOption(vm, `Bus[${i}]`, \"EQ\", `channel[${j}]`, `cell[${k}]`, \"q\", value),\r\n\t\t\t\t\t}),\r\n\t\t\t\t}),\r\n\t\t\t},\r\n\t\t\tGain: (value?: Value) => runOption(vm, `Bus[${i}]`, \"Gain\", value),\r\n\t\t\tLabel: (value?: Value) => runOption(vm, `Bus[${i}]`, \"Label\", value),\r\n\t\t\tmode: {\r\n\t\t\t\tnormal: (value?: Value) => runOption(vm, `Bus[${i}]`, \"mode\", \"normal\", value),\r\n\t\t\t\tAmix: (value?: Value) => runOption(vm, `Bus[${i}]`, \"mode\", \"Amix\", value),\r\n\t\t\t\tBmix: (value?: Value) => runOption(vm, `Bus[${i}]`, \"mode\", \"Bmix\", value),\r\n\t\t\t\tRepeat: (value?: Value) => runOption(vm, `Bus[${i}]`, \"mode\", \"Repeat\", value),\r\n\t\t\t\tComposite: (value?: Value) => runOption(vm, `Bus[${i}]`, \"mode\", \"Composite\", value),\r\n\t\t\t\tTVMix: (value?: Value) => runOption(vm, `Bus[${i}]`, \"mode\", \"TVMix\", value),\r\n\t\t\t\tUpMix21: (value?: Value) => runOption(vm, `Bus[${i}]`, \"mode\", \"UpMix21\", value),\r\n\t\t\t\tUpMix41: (value?: Value) => runOption(vm, `Bus[${i}]`, \"mode\", \"UpMix41\", value),\r\n\t\t\t\tUpMix61: (value?: Value) => runOption(vm, `Bus[${i}]`, \"mode\", \"UpMix61\", value),\r\n\t\t\t\tCenterOnly: (value?: Value) => runOption(vm, `Bus[${i}]`, \"mode\", \"CenterOnly\", value),\r\n\t\t\t\tLFEOnly: (value?: Value) => runOption(vm, `Bus[${i}]`, \"mode\", \"LFEOnly\", value),\r\n\t\t\t\tRearOnly: (value?: Value) => runOption(vm, `Bus[${i}]`, \"mode\", \"RearOnly\", value),\r\n\t\t\t},\r\n\t\t\tFadeTo: (value?: Value) => runOption(vm, `Bus[${i}]`, \"FadeTo\", value),\r\n\t\t\tFadeBy: (value?: Value) => runOption(vm, `Bus[${i}]`, \"FadeBy\", value),\r\n\t\t\tSel: (value?: Value) => runOption(vm, `Bus[${i}]`, \"Sel\", value),\r\n\t\t\tReturnReverb: (value?: Value) => runOption(vm, `Bus[${i}]`, \"ReturnReverb\", value),\r\n\t\t\tReturnDelay: (value?: Value) => runOption(vm, `Bus[${i}]`, \"ReturnDelay\", value),\r\n\t\t\tReturnFx1: (value?: Value) => runOption(vm, `Bus[${i}]`, \"ReturnFx1\", value),\r\n\t\t\tReturnFx2: (value?: Value) => runOption(vm, `Bus[${i}]`, \"ReturnFx2\", value),\r\n\t\t\tMonitor: (value?: Value) => runOption(vm, `Bus[${i}]`, \"Monitor\", value),\r\n\t\t\tVAIO: (value?: Value) => runOption(vm, `Bus[${i}]`, \"VAIO\", value),\r\n\t\t\tdevice: {\r\n\t\t\t\tname: (value?: Value) => runOption(vm, `Bus[${i}]`, \"device\", \"name\", value),\r\n\t\t\t\tsr: (value?: Value) => runOption(vm, `Bus[${i}]`, \"device\", \"sr\", value),\r\n\t\t\t\twdm: (value?: Value) => runOption(vm, `Bus[${i}]`, \"device\", \"wdm\", value),\r\n\t\t\t\tks: (value?: Value) => runOption(vm, `Bus[${i}]`, \"device\", \"ks\", value),\r\n\t\t\t\tmme: (value?: Value) => runOption(vm, `Bus[${i}]`, \"device\", \"mme\", value),\r\n\t\t\t\tasio: (value?: Value) => runOption(vm, `Bus[${i}]`, \"device\", \"asio\", value),\r\n\t\t\t},\r\n\t\t}),\r\n\t\tFx: {\r\n\t\t\tReverb: {\r\n\t\t\t\tOn: (value?: Value) => runOption(vm, \"Fx\", \"Reverb\", \"On\", value),\r\n\t\t\t\tAB: (value?: Value) => runOption(vm, \"Fx\", \"Reverb\", \"AB\", value),\r\n\t\t\t},\r\n\t\t\tDelay: {\r\n\t\t\t\tOn: (value?: Value) => runOption(vm, \"Fx\", \"Delay\", \"On\", value),\r\n\t\t\t\tAB: (value?: Value) => runOption(vm, \"Fx\", \"Delay\", \"AB\", value),\r\n\t\t\t},\r\n\t\t},\r\n\t\tpatch: {\r\n\t\t\tasio: (i: number) => (value?: Value) => runOption(vm, \"patch\", `asio[${i}]`, value),\r\n\t\t\tOutA2: (i: number) => (value?: Value) => runOption(vm, \"patch\", `OutA2[${i}]`, value),\r\n\t\t\tOutA3: (i: number) => (value?: Value) => runOption(vm, \"patch\", `OutA3[${i}]`, value),\r\n\t\t\tOutA4: (i: number) => (value?: Value) => runOption(vm, \"patch\", `OutA4[${i}]`, value),\r\n\t\t\tOutA5: (i: number) => (value?: Value) => runOption(vm, \"patch\", `OutA5[${i}]`, value),\r\n\t\t\tcomposite: (j: number) => (value?: Value) => runOption(vm, \"Patch\", `composite[${j}]`, value),\r\n\t\t\tinsert: (k: number) => (value?: Value) => runOption(vm, \"Patch\", `insert[${k}]`, value),\r\n\t\t\tPostFaderComposite: (value?: Value) => runOption(vm, \"Patch\", \"PostFaderComposite\", value),\r\n\t\t\tPostFxInsert: (value?: Value) => runOption(vm, \"Patch\", \"PostFxInsert\", value),\r\n\t\t},\r\n\t\tOption: {\r\n\t\t\tsr: (value?: Value) => runOption(vm, \"Option\", \"sr\", value),\r\n\t\t\tASIOsr: (value?: Value) => runOption(vm, \"Option\", \"ASIOsr\", value),\r\n\t\t\tdelay: (i: number) => (value?: Value) => runOption(vm, \"Option\", `delay[${i}]`, value),\r\n\t\t\tbuffer: {\r\n\t\t\t\tmme: (value?: Value) => runOption(vm, \"Option\", \"buffer\", \"mme\", value),\r\n\t\t\t\twdm: (value?: Value) => runOption(vm, \"Option\", \"buffer\", \"wdm\", value),\r\n\t\t\t\tks: (value?: Value) => runOption(vm, \"Option\", \"buffer\", \"ks\", value),\r\n\t\t\t\tasio: (value?: Value) => runOption(vm, \"Option\", \"buffer\", \"asio\", value),\r\n\t\t\t},\r\n\t\t\tmode: {\r\n\t\t\t\texclusif: (value?: Value) => runOption(vm, \"Option\", \"mode\", \"exclusif\", value),\r\n\t\t\t\tswift: (value?: Value) => runOption(vm, \"Option\", \"mode\", \"swift\", value),\r\n\t\t\t},\r\n\t\t\tMonitorOnSEL: (value?: Value) => runOption(vm, \"Option\", \"MonitorOnSEL\", value),\r\n\t\t\tSliderMode: (value?: Value) => runOption(vm, \"Option\", \"SliderMode\", value),\r\n\t\t},\r\n\t\trecorder: {\r\n\t\t\tstop: (value?: Value) => runOption(vm, \"recorder\", \"stop\", value),\r\n\t\t\tplay: (value?: Value) => runOption(vm, \"recorder\", \"play\", value),\r\n\t\t\treplay: (value?: Value) => runOption(vm, \"recorder\", \"replay\", value),\r\n\t\t\tff: (value?: Value) => runOption(vm, \"recorder\", \"ff\", value),\r\n\t\t\trew: (value?: Value) => runOption(vm, \"recorder\", \"rew\", value),\r\n\t\t\tA1: (value?: Value) => runOption(vm, \"recorder\", \"A1\", value),\r\n\t\t\tA2: (value?: Value) => runOption(vm, \"recorder\", \"A2\", value),\r\n\t\t\tA3: (value?: Value) => runOption(vm, \"recorder\", \"A3\", value),\r\n\t\t\tA4: (value?: Value) => runOption(vm, \"recorder\", \"A4\", value),\r\n\t\t\tA5: (value?: Value) => runOption(vm, \"recorder\", \"A5\", value),\r\n\t\t\tB1: (value?: Value) => runOption(vm, \"recorder\", \"B1\", value),\r\n\t\t\tB2: (value?: Value) => runOption(vm, \"recorder\", \"B2\", value),\r\n\t\t\tB3: (value?: Value) => runOption(vm, \"recorder\", \"B3\", value),\r\n\t\t\trecord: (value?: Value) => runOption(vm, \"recorder\", \"record\", value),\r\n\t\t\tpause: (value?: Value) => runOption(vm, \"recorder\", \"pause\", value),\r\n\t\t\tgoto: (value?: Value) => runOption(vm, \"Recorder\", \"goto\", value),\r\n\t\t\tload: (value?: Value) => runOption(vm, \"Recorder\", \"load\", value),\r\n\t\t\tsamplerate: (value?: Value) => runOption(vm, \"Recorder\", \"samplerate\", value),\r\n\t\t\tArmStrip: (i: number) => (value?: Value) => runOption(vm, \"Recorder\", `ArmStrip(${i})`, value),\r\n\t\t\tArmBus: (i: number) => (value?: Value) => runOption(vm, \"Recorder\", `ArmBus(${i})`, value),\r\n\t\t\tmode: {\r\n\t\t\t\trecbus: (value?: Value) => runOption(vm, \"Recorder\", \"mode\", \"recbus\", value),\r\n\t\t\t\tPlayOnLoad: (value?: Value) => runOption(vm, \"Recorder\", \"mode\", \"PlayOnLoad\", value),\r\n\t\t\t\tLoop: (value?: Value) => runOption(vm, \"Recorder\", \"mode\", \"Loop\", value),\r\n\t\t\t\tMultiTrack: (value?: Value) => runOption(vm, \"Recorder\", \"mode\", \"MultiTrack\", value),\r\n\t\t\t},\r\n\t\t\tbitResolution: (value?: Value) => runOption(vm, \"Recorder\", \"bitResolution\", value),\r\n\t\t\tChannel: (value?: Value) => runOption(vm, \"Recorder\", \"Channel\", value),\r\n\t\t\tkbps: (value?: Value) => runOption(vm, \"Recorder\", \"kbps\", value),\r\n\t\t\tFileType: (value?: Value) => runOption(vm, \"Recorder\", \"FileType\", value),\r\n\t\t\tgain: (value?: Value) => runOption(vm, \"Recorder\", \"gain\", value),\r\n\t\t},\r\n\t\tvban: {\r\n\t\t\tEnable: (value?: Value) => runOption(vm, \"vban\", \"Enable\", value),\r\n\t\t\tinstream: (i: number) => ({\r\n\t\t\t\ton: (value?: Value) => runOption(vm, \"vban\", `instream[${i}]`, \"on\", value),\r\n\t\t\t\tname: (value?: Value) => runOption(vm, \"vban\", `instream[${i}]`, \"name\", value),\r\n\t\t\t\tip: (value?: Value) => runOption(vm, \"vban\", `instream[${i}]`, \"ip\", value),\r\n\t\t\t\tport: (value?: Value) => runOption(vm, \"vban\", `instream[${i}]`, \"port\", value),\r\n\t\t\t\tsr: (value?: Value) => runOption(vm, \"vban\", `instream[${i}]`, \"sr\", value),\r\n\t\t\t\tchannel: (value?: Value) => runOption(vm, \"vban\", `instream[${i}]`, \"channel\", value),\r\n\t\t\t\tbit: (value?: Value) => runOption(vm, \"vban\", `instream[${i}]`, \"bit\", value),\r\n\t\t\t\tquality: (value?: Value) => runOption(vm, \"vban\", `instream[${i}]`, \"quality\", value),\r\n\t\t\t\troute: (value?: Value) => runOption(vm, \"vban\", `instream[${i}]`, \"route\", value),\r\n\t\t\t}),\r\n\t\t\toutstream: (i: number) => ({\r\n\t\t\t\ton: (value?: Value) => runOption(vm, \"vban\", `outstream[${i}]`, \"on\", value),\r\n\t\t\t\tname: (value?: Value) => runOption(vm, \"vban\", `outstream[${i}]`, \"name\", value),\r\n\t\t\t\tip: (value?: Value) => runOption(vm, \"vban\", `outstream[${i}]`, \"ip\", value),\r\n\t\t\t\tport: (value?: Value) => runOption(vm, \"vban\", `outstream[${i}]`, \"port\", value),\r\n\t\t\t\tsr: (value?: Value) => runOption(vm, \"vban\", `outstream[${i}]`, \"sr\", value),\r\n\t\t\t\tchannel: (value?: Value) => runOption(vm, \"vban\", `outstream[${i}]`, \"channel\", value),\r\n\t\t\t\tbit: (value?: Value) => runOption(vm, \"vban\", `outstream[${i}]`, \"bit\", value),\r\n\t\t\t\tquality: (value?: Value) => runOption(vm, \"vban\", `outstream[${i}]`, \"quality\", value),\r\n\t\t\t\troute: (value?: Value) => runOption(vm, \"vban\", `outstream[${i}]`, \"route\", value),\r\n\t\t\t}),\r\n\t\t},\r\n\t};\r\n}\r\n","/* eslint-disable no-control-regex */\r\nimport koffi from \"koffi\";\r\nimport DLLHandler from \"./DLLHandler\";\r\nimport { Device, VMLibrary, VoiceMeeterTypes } from \"../types/VoicemeeterTypes\";\r\nimport { vmParameters } from \"./VoicemeeterParameters\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nlet libVM: VMLibrary;\r\n/**\r\n * @ignore\r\n */\r\nlet instance: Voicemeeter;\r\n\r\nexport default class Voicemeeter {\r\n\t/**\r\n\t * Initializes the voice meeter dll connection.\r\n\t * This call is neccessary to use the api. It returns a promise with a VoiceMeeter instance\r\n\t */\r\n\tpublic static async init(): Promise<Voicemeeter> {\r\n\t\tconst dllPath = await DLLHandler.getDLLPath();\r\n\r\n\t\treturn new Promise((resolve: (instance: Voicemeeter) => any) => {\r\n\t\t\tif (!instance) {\r\n\t\t\t\tinstance = new Voicemeeter();\r\n\t\t\t}\r\n\t\t\tconst lib = koffi.load(`${dllPath}/VoicemeeterRemote64.dll`);\r\n\t\t\tlibVM = {\r\n\t\t\t\tVBVMR_Login: lib.func(\"long __stdcall VBVMR_Login(void)\"),\r\n\t\t\t\tVBVMR_Logout: lib.func(\"long __stdcall VBVMR_Logout(void)\"),\r\n\t\t\t\tVBVMR_RunVoicemeeter: lib.func(\"long __stdcall VBVMR_RunVoicemeeter(long mode)\"),\r\n\t\t\t\tVBVMR_IsParametersDirty: lib.func(\"long __stdcall VBVMR_IsParametersDirty(void)\"),\r\n\t\t\t\tVBVMR_GetLevel: lib.func(\"long __stdcall VBVMR_GetLevel(long type, long channel, _Out_ float* value)\"),\r\n\t\t\t\tVBVMR_GetParameterFloat: lib.func(\"long __stdcall VBVMR_GetParameterFloat(const char* param, _Out_ float* value)\"),\r\n\t\t\t\tVBVMR_GetParameterStringA: lib.func(\"long __stdcall VBVMR_GetParameterStringA(const char* param, _Out_ char* value)\"),\r\n\t\t\t\tVBVMR_SetParameters: lib.func(\"long __stdcall VBVMR_SetParameters(const char* param)\"),\r\n\t\t\t\tVBVMR_Output_GetDeviceNumber: lib.func(\"long __stdcall VBVMR_Output_GetDeviceNumber(void)\"),\r\n\t\t\t\tVBVMR_Output_GetDeviceDescA: lib.func(\r\n\t\t\t\t\t\"long __stdcall VBVMR_Output_GetDeviceDescA(long index, _Out_ long* type, _Out_ char* name, _Out_ char* hardwareId)\"\r\n\t\t\t\t),\r\n\t\t\t\tVBVMR_Input_GetDeviceNumber: lib.func(\"long __stdcall VBVMR_Input_GetDeviceNumber(void)\"),\r\n\t\t\t\tVBVMR_Input_GetDeviceDescA: lib.func(\r\n\t\t\t\t\t\"long __stdcall VBVMR_Input_GetDeviceDescA(long index, long* type, char* name, char* hardwareId)\"\r\n\t\t\t\t),\r\n\t\t\t\tVBVMR_GetVoicemeeterType: lib.func(\"long __stdcall VBVMR_GetVoicemeeterType(_Out_ long* type)\"),\r\n\t\t\t\tVBVMR_GetVoicemeeterVersion: lib.func(\"long __stdcall VBVMR_GetVoicemeeterVersion(_Out_ long* version)\"),\r\n\t\t\t};\r\n\r\n\t\t\tinstance.isInitialised = true;\r\n\t\t\tresolve(instance);\r\n\t\t});\r\n\t}\r\n\r\n\tpublic isConnected = false;\r\n\tprivate isInitialised = false;\r\n\tprivate outputDevices: Device[] = [];\r\n\tprivate inputDevices: Device[] = [];\r\n\tprivate version = \"\";\r\n\tprivate type: VoiceMeeterTypes;\r\n\tprivate eventPool = [] as Array<() => void>;\r\n\tprivate stringParameters = [\"Label\", \"FadeTo\", \"FadeBy\", \"AppGain\", \"AppMute\", \"name\", \"ip\"];\r\n\r\n\t/**\r\n\t * Starts a connection to VoiceMeeter\r\n\t */\r\n\tpublic connect = () => {\r\n\t\tif (!this.isInitialised) {\r\n\t\t\tthrow new Error(\"Await the initialisation before connect\");\r\n\t\t}\r\n\t\tif (this.isConnected) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (libVM.VBVMR_Login() === 0) {\r\n\t\t\tthis.isConnected = true;\r\n\t\t\tthis.type = this.getVoicemeeterType();\r\n\t\t\tthis.version = this.getVoicemeeterVersion();\r\n\t\t\tsetInterval(this.checkPropertyChange, 10);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.isConnected = false;\r\n\t\tthrow new Error(\"Connection failed\");\r\n\t};\r\n\r\n\t/**\r\n\t * Getter $outputDevices\r\n\t * @return {Device[] }\r\n\t */\r\n\tpublic get $outputDevices(): Device[] {\r\n\t\treturn this.outputDevices;\r\n\t}\r\n\r\n\t/**\r\n\t * Getter $inputDevices\r\n\t * @return {Device[] }\r\n\t */\r\n\tpublic get $inputDevices(): Device[] {\r\n\t\treturn this.inputDevices;\r\n\t}\r\n\r\n\t/**\r\n\t * Getter $version\r\n\t * @return {string }\r\n\t */\r\n\tpublic get $version(): string {\r\n\t\treturn this.version;\r\n\t}\r\n\r\n\t/**\r\n\t * Getter $type\r\n\t * @return {VoiceMeeterTypes}\r\n\t */\r\n\tpublic get $type(): VoiceMeeterTypes {\r\n\t\treturn this.type;\r\n\t}\r\n\r\n\t/**\r\n\t * Terminates the connection to VoiceMeeter\r\n\t */\r\n\tpublic disconnect = () => {\r\n\t\tif (!this.isConnected) {\r\n\t\t\tthrow new Error(\"Not connected \");\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tif (libVM.VBVMR_Logout() === 0) {\r\n\t\t\t\tthis.isConnected = false;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthrow new Error(\"Disconnect failed\");\r\n\t\t} catch {\r\n\t\t\tthrow new Error(\"Disconnect failed\");\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Updates all input and ouput devices\r\n\t */\r\n\tpublic updateDeviceList = () => {\r\n\t\tif (!this.isConnected) {\r\n\t\t\tthrow new Error(\"Not connected \");\r\n\t\t}\r\n\t\tthis.outputDevices = [];\r\n\t\tthis.inputDevices = [];\r\n\t\tconst outputDeviceNumber = libVM.VBVMR_Output_GetDeviceNumber();\r\n\t\tfor (let i = 0; i < outputDeviceNumber; i++) {\r\n\t\t\tconst hardwareIdPtr = Buffer.alloc(256);\r\n\t\t\tconst namePtr = Buffer.alloc(256);\r\n\t\t\tconst typePtr = [0];\r\n\r\n\t\t\tlibVM.VBVMR_Output_GetDeviceDescA(i, typePtr, namePtr, hardwareIdPtr);\r\n\t\t\tthis.outputDevices.push({\r\n\t\t\t\tname: namePtr.toString().replace(/\\u0000+$/g, \"\"),\r\n\t\t\t\thardwareId: hardwareIdPtr.toString().replace(/\\u0000+$/g, \"\"),\r\n\t\t\t\ttype: typePtr[0],\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tconst inputDeviceNumber = libVM.VBVMR_Input_GetDeviceNumber();\r\n\t\tfor (let i = 0; i < inputDeviceNumber; i++) {\r\n\t\t\tconst hardwareIdPtr = Buffer.alloc(256);\r\n\t\t\tconst namePtr = Buffer.alloc(256);\r\n\t\t\tconst typePtr = [0];\r\n\r\n\t\t\tlibVM.VBVMR_Input_GetDeviceDescA(i, typePtr, namePtr, hardwareIdPtr);\r\n\t\t\tthis.inputDevices.push({\r\n\t\t\t\tname: namePtr.toString().replace(/\\u0000+$/g, \"\"),\r\n\t\t\t\thardwareId: hardwareIdPtr.toString().replace(/\\u0000+$/g, \"\"),\r\n\t\t\t\ttype: typePtr[0],\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Returns wheter a parameter has been changed\r\n\t */\r\n\tpublic isParametersDirty = () => {\r\n\t\treturn libVM.VBVMR_IsParametersDirty();\r\n\t};\r\n\r\n\tpublic parameters = vmParameters(this);\r\n\r\n\t/**\r\n\t * @param  {()=>any} fn Function which should be called if something changes\r\n\t */\r\n\tpublic attachChangeEvent = (fn: () => any) => {\r\n\t\tthis.eventPool.push(fn);\r\n\t};\r\n\t/**\r\n\t * @param parameterName Name of the parameter that should be get\r\n\t * @returns {any} Parameter value\r\n\t */\r\n\tpublic getOption = (parameterName: string) => {\r\n\t\tif (!this.isConnected) {\r\n\t\t\tthrow new Error(\"Not correct connected \");\r\n\t\t}\r\n\t\t// Some parameters return string values and require some post-processing, this checks for those parameters\r\n\t\tif (this.stringParameters.some((str) => parameterName.includes(str))) {\r\n\t\t\tconst strPtr = Buffer.alloc(512);\r\n\t\t\tlibVM.VBVMR_GetParameterStringA(parameterName, strPtr);\r\n\t\t\treturn String.fromCharCode\r\n\t\t\t\t.apply(null, strPtr)\r\n\t\t\t\t.split(\"\")\r\n\t\t\t\t.filter((e: string) => {\r\n\t\t\t\t\treturn e !== \"\\0\";\r\n\t\t\t\t})\r\n\t\t\t\t.join(\"\");\r\n\t\t}\r\n\t\tconst valuePtr = [0];\r\n\t\tlibVM.VBVMR_GetParameterFloat(parameterName, valuePtr);\r\n\t\treturn valuePtr[0];\r\n\t};\r\n\t/**\r\n\t * Sets an option.\r\n\t * @param {string} option Option to set\r\n\t */\r\n\tpublic setOption = (option: string) => {\r\n\t\tconst script = Buffer.alloc(option.length + 1);\r\n\t\tscript.fill(0).write(option);\r\n\t\tlibVM.VBVMR_SetParameters(script);\r\n\t\treturn new Promise((resolve) => setTimeout(resolve, 200));\r\n\t};\r\n\r\n\t/**\r\n\t * Checks whether properties has been changed and calls all event listeners\r\n\t */\r\n\tprivate checkPropertyChange = () => {\r\n\t\tif (this.isParametersDirty() === 1) {\r\n\t\t\tthis.eventPool.forEach((eventListener) => {\r\n\t\t\t\teventListener();\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Gets installed voicemeeter type.\r\n\t * Means Voicemeeter(normal,banana,potato)\r\n\t */\r\n\tprivate getVoicemeeterType = (): VoiceMeeterTypes => {\r\n\t\tconst typePtr = [0];\r\n\t\tif (libVM.VBVMR_GetVoicemeeterType(typePtr) !== 0) {\r\n\t\t\tthrow new Error(\"running failed\");\r\n\t\t}\r\n\r\n\t\tswitch (typePtr[0]) {\r\n\t\t\tcase 1: // Voicemeeter\r\n\t\t\t\treturn \"voicemeeter\";\r\n\t\t\tcase 2: // Voicemeeter Banana\r\n\t\t\t\treturn \"voicemeeterBanana\";\r\n\t\t\tcase 3: // Voicemeeter Potato\r\n\t\t\t\treturn \"voicemeeterPotato\";\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(\"Voicemeeter seems not to be installed\");\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Returns the installed voicemeeter version\r\n\t */\r\n\tprivate getVoicemeeterVersion = () => {\r\n\t\tconst versionPtr = [0];\r\n\t\tif (libVM.VBVMR_GetVoicemeeterVersion(versionPtr) !== 0) {\r\n\t\t\tthrow new Error(\"running failed\");\r\n\t\t}\r\n\t\t// For info on this see: https://github.com/mirror/equalizerapo/blob/53d885f7f1a097b457e17a5206b7d60f647877a8/VoicemeeterClient/VoicemeeterRemote.h#L122-L135\r\n\t\tconst version =\r\n\t\t\t`${(versionPtr[0] & 0xff000000) >> 24}` +\r\n\t\t\t`.${(versionPtr[0] & 0x00ff0000) >> 16}` +\r\n\t\t\t`.${(versionPtr[0] & 0x0000ff00) >> 8}` +\r\n\t\t\t`.${versionPtr[0] & 0x000000ff}`;\r\n\t\treturn version;\r\n\t};\r\n\r\n\t/**\r\n\t * Gets realtime audio level see the VoicemeeterRemote API: [VoicemeeterRemote.h GetLevel](https://github.com/mirror/equalizerapo/blob/7aece1b788fce5aa11873f3842a0d01f7c78454b/VoicemeeterClient/VoicemeeterRemote.h#L284),\r\n\t * for more details about the parameters\r\n\t * @param {0|1|2|3} type 0 = pre fader input levels. 1 = post fader input levels. 2= post Mute input levels. 3= output levels\r\n\t * @param channel audio channel zero based index\r\n\t * @returns {float} Current audio level\r\n\t */\r\n\tpublic getLevel = (type: 0 | 1 | 2 | 3, channel: number) => {\r\n\t\tconst levelPtr = [0];\r\n\t\tlibVM.VBVMR_GetLevel(type, channel, levelPtr);\r\n\t\treturn levelPtr[0];\r\n\t};\r\n}\r\n","import Registry from \"winreg\";\r\n\r\nconst DLLHandler = {\r\n\tgetDLLPath: async (): Promise<any> => {\r\n\t\tconst regKey = new Registry({\r\n\t\t\thive: Registry.HKLM,\r\n\t\t\tkey: \"\\\\SOFTWARE\\\\WOW6432Node\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Uninstall\\\\VB:Voicemeeter {17359A74-1236-5467}\",\r\n\t\t});\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tregKey.values((err: any, items: any) => {\r\n\t\t\t\tif (err) {\r\n\t\t\t\t\tthrow new Error(err);\r\n\t\t\t\t}\r\n\t\t\t\tconst unistallerPath = items.find((i: any) => i.name === \"UninstallString\").value;\r\n\t\t\t\tconst fileNameIndex = unistallerPath.lastIndexOf(\"\\\\\");\r\n\t\t\t\tresolve(unistallerPath.slice(0, fileNameIndex));\r\n\t\t\t});\r\n\t\t});\r\n\t},\r\n};\r\n\r\nexport default DLLHandler;\r\n"],"names":["runOption","vm","args","isConnected","Error","value","length","pop","undefined","setOption","join","getOption","libVM","instance","Voicemeeter","isInitialised","outputDevices","inputDevices","version","type","eventPool","stringParameters","connect","this","VBVMR_Login","getVoicemeeterType","getVoicemeeterVersion","setInterval","checkPropertyChange","disconnect","VBVMR_Logout","_unused","updateDeviceList","outputDeviceNumber","VBVMR_Output_GetDeviceNumber","i","hardwareIdPtr","Buffer","alloc","namePtr","typePtr","VBVMR_Output_GetDeviceDescA","push","name","toString","replace","hardwareId","inputDeviceNumber","VBVMR_Input_GetDeviceNumber","VBVMR_Input_GetDeviceDescA","isParametersDirty","VBVMR_IsParametersDirty","parameters","Command","Shutdown","Show","Restart","Eject","Reset","Save","Load","Lock","Button","State","StateOnly","Trigger","Color","DialogShow","VBANCHAT","SaveBUSEQ","j","LoadBUSEQ","SaveStripEQ","LoadStripEQ","Preset","k","Recall","Strip","Mono","Mute","Solo","MC","Gain","GainLayer","Pan_x","Pan_y","Color_x","Color_y","fx_x","fx_y","Audibility","Comp","GainIn","Ratio","Threshold","Attack","Release","Knee","GainOut","MakeUp","Gate","Damping","BPSidechain","Hold","Denoiser","Pitch","On","DryWet","PitchValue","LoFormant","MedFormant","HiFormant","Karaoke","Limit","EQGain1","EQGain2","EQGain3","Label","A1","A2","A3","A4","A5","B1","B2","B3","FadeTo","FadeBy","Reverb","Delay","Fx1","Fx2","PostReverb","PostDelay","PostFx1","PostFx2","EQ","on","AB","channel","cell","f","gain","q","VAIO","App","AppGain","AppMute","device","sr","wdm","ks","mme","asio","Bus","mode","normal","Amix","Bmix","Repeat","Composite","TVMix","UpMix21","UpMix41","UpMix61","CenterOnly","LFEOnly","RearOnly","Sel","ReturnReverb","ReturnDelay","ReturnFx1","ReturnFx2","Monitor","Fx","patch","OutA2","OutA3","OutA4","OutA5","composite","insert","PostFaderComposite","PostFxInsert","Option","ASIOsr","delay","buffer","exclusif","swift","MonitorOnSEL","SliderMode","recorder","stop","play","replay","ff","rew","record","pause","goto","load","samplerate","ArmStrip","ArmBus","recbus","PlayOnLoad","Loop","MultiTrack","bitResolution","Channel","kbps","FileType","vban","Enable","instream","ip","port","bit","quality","route","outstream","attachChangeEvent","fn","parameterName","some","str","includes","strPtr","VBVMR_GetParameterStringA","String","fromCharCode","apply","split","filter","e","valuePtr","VBVMR_GetParameterFloat","option","script","fill","write","VBVMR_SetParameters","Promise","resolve","setTimeout","forEach","eventListener","VBVMR_GetVoicemeeterType","versionPtr","VBVMR_GetVoicemeeterVersion","getLevel","levelPtr","VBVMR_GetLevel","init","dllPath","async","regKey","Registry","hive","HKLM","key","values","err","items","unistallerPath","find","fileNameIndex","lastIndexOf","slice","DLLHandler","lib","koffi","func","VBVMR_RunVoicemeeter","$outputDevices","$inputDevices","$version","$type"],"mappings":"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"}