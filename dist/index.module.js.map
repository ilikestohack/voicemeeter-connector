{"version":3,"file":"index.module.js","sources":["../src/lib/DLLHandler.ts","../src/lib/VoicemeeterConnector.ts","../src/lib/VoicemeeterParameters.ts"],"sourcesContent":["import Registry from \"winreg\";\r\n\r\nconst DLLHandler = {\r\n\tgetDLLPath: async (): Promise<any> => {\r\n\t\tconst regKey = new Registry({\r\n\t\t\thive: Registry.HKLM,\r\n\t\t\tkey: \"\\\\SOFTWARE\\\\WOW6432Node\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Uninstall\\\\VB:Voicemeeter {17359A74-1236-5467}\",\r\n\t\t});\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tregKey.values((err: any, items: any) => {\r\n\t\t\t\tif (err) {\r\n\t\t\t\t\tthrow new Error(err);\r\n\t\t\t\t}\r\n\t\t\t\tconst unistallerPath = items.find((i: any) => i.name === \"UninstallString\").value;\r\n\t\t\t\tconst fileNameIndex = unistallerPath.lastIndexOf(\"\\\\\");\r\n\t\t\t\tresolve(unistallerPath.slice(0, fileNameIndex));\r\n\t\t\t});\r\n\t\t});\r\n\t},\r\n};\r\n\r\nexport default DLLHandler;\r\n","/* eslint-disable no-control-regex */\r\nimport koffi from \"koffi\";\r\nimport DLLHandler from \"./DLLHandler\";\r\nimport { Device, VMLibrary, VoiceMeeterTypes } from \"../types/VoicemeeterTypes\";\r\nimport { vmParameters } from \"./VoicemeeterParameters\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nlet libVM: VMLibrary;\r\n/**\r\n * @ignore\r\n */\r\nlet instance: Voicemeeter;\r\n\r\nexport default class Voicemeeter {\r\n\t/**\r\n\t * Initializes the voice meeter dll connection.\r\n\t * This call is neccessary to use the api. It returns a promise with a VoiceMeeter instance\r\n\t */\r\n\tpublic static async init(): Promise<Voicemeeter> {\r\n\t\tconst dllPath = await DLLHandler.getDLLPath();\r\n\r\n\t\treturn new Promise((resolve: (instance: Voicemeeter) => any) => {\r\n\t\t\tif (!instance) {\r\n\t\t\t\tinstance = new Voicemeeter();\r\n\t\t\t}\r\n\t\t\tconst lib = koffi.load(`${dllPath}/VoicemeeterRemote64.dll`);\r\n\t\t\tlibVM = {\r\n\t\t\t\tVBVMR_Login: lib.func(\"long __stdcall VBVMR_Login(void)\"),\r\n\t\t\t\tVBVMR_Logout: lib.func(\"long __stdcall VBVMR_Logout(void)\"),\r\n\t\t\t\tVBVMR_RunVoicemeeter: lib.func(\"long __stdcall VBVMR_RunVoicemeeter(long mode)\"),\r\n\t\t\t\tVBVMR_IsParametersDirty: lib.func(\"long __stdcall VBVMR_IsParametersDirty(void)\"),\r\n\t\t\t\tVBVMR_GetLevel: lib.func(\"long __stdcall VBVMR_GetLevel(long type, long channel, _Out_ float* value)\"),\r\n\t\t\t\tVBVMR_GetParameterFloat: lib.func(\"long __stdcall VBVMR_GetParameterFloat(const char* param, _Out_ float* value)\"),\r\n\t\t\t\tVBVMR_GetParameterStringA: lib.func(\"long __stdcall VBVMR_GetParameterStringA(const char* param, _Out_ char* value)\"),\r\n\t\t\t\tVBVMR_SetParameters: lib.func(\"long __stdcall VBVMR_SetParameters(const char* param)\"),\r\n\t\t\t\tVBVMR_Output_GetDeviceNumber: lib.func(\"long __stdcall VBVMR_Output_GetDeviceNumber(void)\"),\r\n\t\t\t\tVBVMR_Output_GetDeviceDescA: lib.func(\r\n\t\t\t\t\t\"long __stdcall VBVMR_Output_GetDeviceDescA(long index, _Out_ long* type, _Out_ char* name, _Out_ char* hardwareId)\"\r\n\t\t\t\t),\r\n\t\t\t\tVBVMR_Input_GetDeviceNumber: lib.func(\"long __stdcall VBVMR_Input_GetDeviceNumber(void)\"),\r\n\t\t\t\tVBVMR_Input_GetDeviceDescA: lib.func(\r\n\t\t\t\t\t\"long __stdcall VBVMR_Input_GetDeviceDescA(long index, long* type, char* name, char* hardwareId)\"\r\n\t\t\t\t),\r\n\t\t\t\tVBVMR_GetVoicemeeterType: lib.func(\"long __stdcall VBVMR_GetVoicemeeterType(_Out_ long* type)\"),\r\n\t\t\t\tVBVMR_GetVoicemeeterVersion: lib.func(\"long __stdcall VBVMR_GetVoicemeeterVersion(_Out_ long* version)\"),\r\n\t\t\t};\r\n\r\n\t\t\tinstance.isInitialised = true;\r\n\t\t\tresolve(instance);\r\n\t\t});\r\n\t}\r\n\r\n\tpublic isConnected = false;\r\n\tprivate isInitialised = false;\r\n\tprivate outputDevices: Device[] = [];\r\n\tprivate inputDevices: Device[] = [];\r\n\tprivate version = \"\";\r\n\tprivate type: VoiceMeeterTypes;\r\n\tprivate eventPool = [] as Array<() => void>;\r\n\tprivate stringParameters = [\"Label\", \"FadeTo\", \"FadeBy\", \"AppGain\", \"AppMute\", \"name\", \"ip\"];\r\n\r\n\t/**\r\n\t * Starts a connection to VoiceMeeter\r\n\t */\r\n\tpublic connect = () => {\r\n\t\tif (!this.isInitialised) {\r\n\t\t\tthrow new Error(\"Await the initialisation before connect\");\r\n\t\t}\r\n\t\tif (this.isConnected) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (libVM.VBVMR_Login() === 0) {\r\n\t\t\tthis.isConnected = true;\r\n\t\t\tthis.type = this.getVoicemeeterType();\r\n\t\t\tthis.version = this.getVoicemeeterVersion();\r\n\t\t\tsetInterval(this.checkPropertyChange, 10);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.isConnected = false;\r\n\t\tthrow new Error(\"Connection failed\");\r\n\t};\r\n\r\n\t/**\r\n\t * Getter $outputDevices\r\n\t * @return {Device[] }\r\n\t */\r\n\tpublic get $outputDevices(): Device[] {\r\n\t\treturn this.outputDevices;\r\n\t}\r\n\r\n\t/**\r\n\t * Getter $inputDevices\r\n\t * @return {Device[] }\r\n\t */\r\n\tpublic get $inputDevices(): Device[] {\r\n\t\treturn this.inputDevices;\r\n\t}\r\n\r\n\t/**\r\n\t * Getter $version\r\n\t * @return {string }\r\n\t */\r\n\tpublic get $version(): string {\r\n\t\treturn this.version;\r\n\t}\r\n\r\n\t/**\r\n\t * Getter $type\r\n\t * @return {VoiceMeeterTypes}\r\n\t */\r\n\tpublic get $type(): VoiceMeeterTypes {\r\n\t\treturn this.type;\r\n\t}\r\n\r\n\t/**\r\n\t * Terminates the connection to VoiceMeeter\r\n\t */\r\n\tpublic disconnect = () => {\r\n\t\tif (!this.isConnected) {\r\n\t\t\tthrow new Error(\"Not connected \");\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tif (libVM.VBVMR_Logout() === 0) {\r\n\t\t\t\tthis.isConnected = false;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthrow new Error(\"Disconnect failed\");\r\n\t\t} catch {\r\n\t\t\tthrow new Error(\"Disconnect failed\");\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Updates all input and ouput devices\r\n\t */\r\n\tpublic updateDeviceList = () => {\r\n\t\tif (!this.isConnected) {\r\n\t\t\tthrow new Error(\"Not connected \");\r\n\t\t}\r\n\t\tthis.outputDevices = [];\r\n\t\tthis.inputDevices = [];\r\n\t\tconst outputDeviceNumber = libVM.VBVMR_Output_GetDeviceNumber();\r\n\t\tfor (let i = 0; i < outputDeviceNumber; i++) {\r\n\t\t\tconst hardwareIdPtr = Buffer.alloc(256);\r\n\t\t\tconst namePtr = Buffer.alloc(256);\r\n\t\t\tconst typePtr = [0];\r\n\r\n\t\t\tlibVM.VBVMR_Output_GetDeviceDescA(i, typePtr, namePtr, hardwareIdPtr);\r\n\t\t\tthis.outputDevices.push({\r\n\t\t\t\tname: namePtr.toString().replace(/\\u0000+$/g, \"\"),\r\n\t\t\t\thardwareId: hardwareIdPtr.toString().replace(/\\u0000+$/g, \"\"),\r\n\t\t\t\ttype: typePtr[0],\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tconst inputDeviceNumber = libVM.VBVMR_Input_GetDeviceNumber();\r\n\t\tfor (let i = 0; i < inputDeviceNumber; i++) {\r\n\t\t\tconst hardwareIdPtr = Buffer.alloc(256);\r\n\t\t\tconst namePtr = Buffer.alloc(256);\r\n\t\t\tconst typePtr = [0];\r\n\r\n\t\t\tlibVM.VBVMR_Input_GetDeviceDescA(i, typePtr, namePtr, hardwareIdPtr);\r\n\t\t\tthis.inputDevices.push({\r\n\t\t\t\tname: namePtr.toString().replace(/\\u0000+$/g, \"\"),\r\n\t\t\t\thardwareId: hardwareIdPtr.toString().replace(/\\u0000+$/g, \"\"),\r\n\t\t\t\ttype: typePtr[0],\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Returns wheter a parameter has been changed\r\n\t */\r\n\tpublic isParametersDirty = () => {\r\n\t\treturn libVM.VBVMR_IsParametersDirty();\r\n\t};\r\n\r\n\tpublic parameters = vmParameters(this);\r\n\r\n\t/**\r\n\t * @param  {()=>any} fn Function which should be called if something changes\r\n\t */\r\n\tpublic attachChangeEvent = (fn: () => any) => {\r\n\t\tthis.eventPool.push(fn);\r\n\t};\r\n\t/**\r\n\t * @param parameterName Name of the parameter that should be get\r\n\t * @returns {any} Parameter value\r\n\t */\r\n\tpublic getOption = (parameterName: string) => {\r\n\t\tif (!this.isConnected) {\r\n\t\t\tthrow new Error(\"Not correct connected \");\r\n\t\t}\r\n\t\t// Some parameters return string values and require some post-processing, this checks for those parameters\r\n\t\tif (this.stringParameters.some((str) => parameterName.includes(str))) {\r\n\t\t\tconst strPtr = Buffer.alloc(512);\r\n\t\t\tlibVM.VBVMR_GetParameterStringA(parameterName, strPtr);\r\n\t\t\treturn String.fromCharCode\r\n\t\t\t\t.apply(null, strPtr)\r\n\t\t\t\t.split(\"\")\r\n\t\t\t\t.filter((e: string) => {\r\n\t\t\t\t\treturn e !== \"\\0\";\r\n\t\t\t\t})\r\n\t\t\t\t.join(\"\");\r\n\t\t}\r\n\t\tconst valuePtr = [0];\r\n\t\tlibVM.VBVMR_GetParameterFloat(parameterName, valuePtr);\r\n\t\treturn valuePtr[0];\r\n\t};\r\n\t/**\r\n\t * Sets an option.\r\n\t * @param {string} option Option to set\r\n\t */\r\n\tpublic setOption = (option: string) => {\r\n\t\tconst script = Buffer.alloc(option.length + 1);\r\n\t\tscript.fill(0).write(option);\r\n\t\tlibVM.VBVMR_SetParameters(script);\r\n\t\treturn new Promise((resolve) => setTimeout(resolve, 200));\r\n\t};\r\n\r\n\t/**\r\n\t * Checks whether properties has been changed and calls all event listeners\r\n\t */\r\n\tprivate checkPropertyChange = () => {\r\n\t\tif (this.isParametersDirty() === 1) {\r\n\t\t\tthis.eventPool.forEach((eventListener) => {\r\n\t\t\t\teventListener();\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Gets installed voicemeeter type.\r\n\t * Means Voicemeeter(normal,banana,potato)\r\n\t */\r\n\tprivate getVoicemeeterType = (): VoiceMeeterTypes => {\r\n\t\tconst typePtr = [0];\r\n\t\tif (libVM.VBVMR_GetVoicemeeterType(typePtr) !== 0) {\r\n\t\t\tthrow new Error(\"running failed\");\r\n\t\t}\r\n\r\n\t\tswitch (typePtr[0]) {\r\n\t\t\tcase 1: // Voicemeeter\r\n\t\t\t\treturn \"voicemeeter\";\r\n\t\t\tcase 2: // Voicemeeter Banana\r\n\t\t\t\treturn \"voicemeeterBanana\";\r\n\t\t\tcase 3: // Voicemeeter Potato\r\n\t\t\t\treturn \"voicemeeterPotato\";\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(\"Voicemeeter seems not to be installed\");\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Returns the installed voicemeeter version\r\n\t */\r\n\tprivate getVoicemeeterVersion = () => {\r\n\t\tconst versionPtr = [0];\r\n\t\tif (libVM.VBVMR_GetVoicemeeterVersion(versionPtr) !== 0) {\r\n\t\t\tthrow new Error(\"running failed\");\r\n\t\t}\r\n\t\t// For info on this see: https://github.com/mirror/equalizerapo/blob/53d885f7f1a097b457e17a5206b7d60f647877a8/VoicemeeterClient/VoicemeeterRemote.h#L122-L135\r\n\t\tconst version =\r\n\t\t\t`${(versionPtr[0] & 0xff000000) >> 24}` +\r\n\t\t\t`.${(versionPtr[0] & 0x00ff0000) >> 16}` +\r\n\t\t\t`.${(versionPtr[0] & 0x0000ff00) >> 8}` +\r\n\t\t\t`.${versionPtr[0] & 0x000000ff}`;\r\n\t\treturn version;\r\n\t};\r\n\r\n\t/**\r\n\t * Gets realtime audio level see the VoicemeeterRemote API: [VoicemeeterRemote.h GetLevel](https://github.com/mirror/equalizerapo/blob/7aece1b788fce5aa11873f3842a0d01f7c78454b/VoicemeeterClient/VoicemeeterRemote.h#L284),\r\n\t * for more details about the parameters\r\n\t * @param {0|1|2|3} type 0 = pre fader input levels. 1 = post fader input levels. 2= post Mute input levels. 3= output levels\r\n\t * @param channel audio channel zero based index\r\n\t * @returns {float} Current audio level\r\n\t */\r\n\tpublic getLevel = (type: 0 | 1 | 2 | 3, channel: number) => {\r\n\t\tconst levelPtr = [0];\r\n\t\tlibVM.VBVMR_GetLevel(type, channel, levelPtr);\r\n\t\treturn levelPtr[0];\r\n\t};\r\n}\r\n","/*\r\nTop Level:\r\n- Command\r\n- Strip[i]\r\n- Bus[i]\r\n- Fx\r\n- Patch\r\n- Option\r\n- Recorder\r\n- vban\r\n*/\r\n\r\nimport Voicemeeter from \"./VoicemeeterConnector\";\r\n\r\ntype Value = string | number | undefined;\r\n\r\nasync function getOption(vm: Voicemeeter, args: Value[]) {\r\n\treturn vm.getOption(args.join(\".\"));\r\n}\r\n\r\nasync function runOption(vm: Voicemeeter, ...args: Value[]) {\r\n\tif (!vm.isConnected) {\r\n\t\tthrow new Error(\"Not connected \");\r\n\t}\r\n\r\n\tconst value = args[args.length - 1];\r\n\targs.pop(); // Removes undefined value and regular value to join differently\r\n\tif (value !== undefined) await vm.setOption(`${args.join(\".\")}=${value}`);\r\n\treturn getOption(vm, args);\r\n}\r\n\r\nexport function vmParameters(vm: Voicemeeter) {\r\n\treturn {\r\n\t\tCommand: {\r\n\t\t\tShutdown: (value?: Value) => runOption(vm, \"Command\", \"Shutdown\", value),\r\n\t\t\tShow: (value?: Value) => runOption(vm, \"Command\", \"Show\", value),\r\n\t\t\tRestart: (value?: Value) => runOption(vm, \"Command\", \"Restart\", value),\r\n\t\t\tEject: (value?: Value) => runOption(vm, \"Command\", \"Eject\", value),\r\n\t\t\tReset: (value?: Value) => runOption(vm, \"Command\", \"Reset\", value),\r\n\t\t\tSave: (value?: Value) => runOption(vm, \"Command\", \"Save\", value),\r\n\t\t\tLoad: (value?: Value) => runOption(vm, \"Command\", \"Load\", value),\r\n\t\t\tLock: (value?: Value) => runOption(vm, \"Command\", \"Lock\", value),\r\n\t\t\tButton: (i: number) => ({\r\n\t\t\t\tState: (value?: Value) => runOption(vm, \"Command\", `Button[${i}]`, \"State\", value),\r\n\t\t\t\tStateOnly: (value?: Value) => runOption(vm, \"Command\", `Button[${i}]`, \"StateOnly\", value),\r\n\t\t\t\tTrigger: (value?: Value) => runOption(vm, \"Command\", `Button[${i}]`, \"Trigger\", value),\r\n\t\t\t\tColor: (value?: Value) => runOption(vm, \"Command\", `Button[${i}]`, \"Color\", value),\r\n\t\t\t}),\r\n\t\t\tDialogShow: {\r\n\t\t\t\tVBANCHAT: (value?: Value) => runOption(vm, \"Command\", \"DialogShow\", \"VBANCHAT\", value),\r\n\t\t\t},\r\n\t\t\tSaveBUSEQ: (j: number) => (value?: Value) => runOption(vm, \"Command\", `SaveBUSEQ[${j}]`, value),\r\n\t\t\tLoadBUSEQ: (j: number) => (value?: Value) => runOption(vm, \"Command\", `LoadBUSEQ[${j}]`, value),\r\n\t\t\tSaveStripEQ: (j: number) => (value?: Value) => runOption(vm, \"Command\", `SaveStripEQ[${j}]`, value),\r\n\t\t\tLoadStripEQ: (j: number) => (value?: Value) => runOption(vm, \"Command\", `LoadStripEQ[${j}]`, value),\r\n\t\t\tPreset: (k: number) => ({\r\n\t\t\t\tRecall: (value?: Value) => runOption(vm, \"Command\", `Preset[${k}]`, \"Recall\", value),\r\n\t\t\t}),\r\n\t\t},\r\n\t\tStrip: (i: number) => ({\r\n\t\t\tMono: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Mono\", value),\r\n\t\t\tMute: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Mute\", value),\r\n\t\t\tSolo: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Solo\", value),\r\n\t\t\tMC: (value?: Value) => runOption(vm, `Strip[${i}]`, \"MC\", value),\r\n\t\t\tGain: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Gain\", value),\r\n\t\t\tGainLayer: (j: number) => (value?: Value) => runOption(vm, `Strip[${i}]`, `GainLayer[${j}]`, value),\r\n\t\t\tPan_x: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Pan_x\", value),\r\n\t\t\tPan_y: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Pan_y\", value),\r\n\t\t\tColor_x: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Color_x\", value),\r\n\t\t\tColor_y: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Color_y\", value),\r\n\t\t\tfx_x: (value?: Value) => runOption(vm, `Strip[${i}]`, \"fx_x\", value),\r\n\t\t\tfx_y: (value?: Value) => runOption(vm, `Strip[${i}]`, \"fx_y\", value),\r\n\t\t\tAudibility: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Audibility\", value),\r\n\t\t\tComp: {\r\n\t\t\t\tGainIn: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Comp\", \"GainIn\", value),\r\n\t\t\t\tRatio: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Comp\", \"Ratio\", value),\r\n\t\t\t\tThreshold: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Comp\", \"Threshold\", value),\r\n\t\t\t\tAttack: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Comp\", \"Attack\", value),\r\n\t\t\t\tRelease: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Comp\", \"Release\", value),\r\n\t\t\t\tKnee: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Comp\", \"Knee\", value),\r\n\t\t\t\tGainOut: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Comp\", \"GainOut\", value),\r\n\t\t\t\tMakeUp: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Comp\", \"MakeUp\", value),\r\n\t\t\t},\r\n\t\t\tGate: {\r\n\t\t\t\tThreshold: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Gate\", \"Threshold\", value),\r\n\t\t\t\tDamping: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Gate\", \"Damping\", value),\r\n\t\t\t\tBPSidechain: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Gate\", \"BPSidechain\", value),\r\n\t\t\t\tAttack: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Gate\", \"Attack\", value),\r\n\t\t\t\tHold: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Gate\", \"Hold\", value),\r\n\t\t\t\tRelease: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Gate\", \"Release\", value),\r\n\t\t\t},\r\n\t\t\tDenoiser: {\r\n\t\t\t\tThreshold: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Denoiser\", \"Threshold\", value),\r\n\t\t\t},\r\n\t\t\tPitch: {\r\n\t\t\t\tOn: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Pitch\", \"On\", value),\r\n\t\t\t\tDryWet: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Pitch\", \"DryWet\", value),\r\n\t\t\t\tPitchValue: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Pitch\", \"PitchValue\", value),\r\n\t\t\t\tLoFormant: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Pitch\", \"LoFormant\", value),\r\n\t\t\t\tMedFormant: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Pitch\", \"MedFormant\", value),\r\n\t\t\t\tHiFormant: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Pitch\", \"HiFormant\", value),\r\n\t\t\t},\r\n\t\t\tKaraoke: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Karaoke\", value),\r\n\t\t\tLimit: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Limit\", value),\r\n\t\t\tEQGain1: (value?: Value) => runOption(vm, `Strip[${i}]`, \"EQGain1\", value),\r\n\t\t\tEQGain2: (value?: Value) => runOption(vm, `Strip[${i}]`, \"EQGain2\", value),\r\n\t\t\tEQGain3: (value?: Value) => runOption(vm, `Strip[${i}]`, \"EQGain3\", value),\r\n\t\t\tLabel: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Label\", value),\r\n\t\t\tA1: (value?: Value) => runOption(vm, `Strip[${i}]`, \"A1\", value),\r\n\t\t\tA2: (value?: Value) => runOption(vm, `Strip[${i}]`, \"A2\", value),\r\n\t\t\tA3: (value?: Value) => runOption(vm, `Strip[${i}]`, \"A3\", value),\r\n\t\t\tA4: (value?: Value) => runOption(vm, `Strip[${i}]`, \"A4\", value),\r\n\t\t\tA5: (value?: Value) => runOption(vm, `Strip[${i}]`, \"A5\", value),\r\n\t\t\tB1: (value?: Value) => runOption(vm, `Strip[${i}]`, \"B1\", value),\r\n\t\t\tB2: (value?: Value) => runOption(vm, `Strip[${i}]`, \"B2\", value),\r\n\t\t\tB3: (value?: Value) => runOption(vm, `Strip[${i}]`, \"B3\", value),\r\n\t\t\tFadeTo: (value?: Value) => runOption(vm, `Strip[${i}]`, \"FadeTo\", value),\r\n\t\t\tFadeBy: (value?: Value) => runOption(vm, `Strip[${i}]`, \"FadeBy\", value),\r\n\t\t\tReverb: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Reverb\", value),\r\n\t\t\tDelay: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Delay\", value),\r\n\t\t\tFx1: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Fx1\", value),\r\n\t\t\tFx2: (value?: Value) => runOption(vm, `Strip[${i}]`, \"Fx2\", value),\r\n\t\t\tPostReverb: (value?: Value) => runOption(vm, `Strip[${i}]`, \"PostReverb\", value),\r\n\t\t\tPostDelay: (value?: Value) => runOption(vm, `Strip[${i}]`, \"PostDelay\", value),\r\n\t\t\tPostFx1: (value?: Value) => runOption(vm, `Strip[${i}]`, \"PostFx1\", value),\r\n\t\t\tPostFx2: (value?: Value) => runOption(vm, `Strip[${i}]`, \"PostFx2\", value),\r\n\t\t\tEQ: {\r\n\t\t\t\ton: (value?: Value) => runOption(vm, `Strip[${i}]`, \"EQ\", \"on\", value),\r\n\t\t\t\tAB: (value?: Value) => runOption(vm, `Strip[${i}]`, \"EQ\", \"AB\", value),\r\n\t\t\t\tchannel: (j: number) => ({\r\n\t\t\t\t\tcell: (k: number) => ({\r\n\t\t\t\t\t\ton: (value?: Value) => runOption(vm, `Strip[${i}]`, \"EQ\", `channel[${j}]`, `cell[${k}]`, \"on\", value),\r\n\t\t\t\t\t\ttype: (value?: Value) => runOption(vm, `Strip[${i}]`, \"EQ\", `channel[${j}]`, `cell[${k}]`, \"type\", value),\r\n\t\t\t\t\t\tf: (value?: Value) => runOption(vm, `Strip[${i}]`, \"EQ\", `channel[${j}]`, `cell[${k}]`, \"f\", value),\r\n\t\t\t\t\t\tgain: (value?: Value) => runOption(vm, `Strip[${i}]`, \"EQ\", `channel[${j}]`, `cell[${k}]`, \"gain\", value),\r\n\t\t\t\t\t\tq: (value?: Value) => runOption(vm, `Strip[${i}]`, \"EQ\", `channel[${j}]`, `cell[${k}]`, \"q\", value),\r\n\t\t\t\t\t}),\r\n\t\t\t\t}),\r\n\t\t\t},\r\n\t\t\tVAIO: (value?: Value) => runOption(vm, `Strip[${i}]`, \"VAIO\", value),\r\n\t\t\tApp: (k: number) => ({\r\n\t\t\t\tGain: (value?: Value) => runOption(vm, `Strip[${i}]`, `App[${k}]`, \"Gain\", value),\r\n\t\t\t\tMute: (value?: Value) => runOption(vm, `Strip[${i}]`, `App[${k}]`, \"Mute\", value),\r\n\t\t\t}),\r\n\t\t\tAppGain: (value?: Value) => runOption(vm, `Strip[${i}]`, \"AppGain\", value),\r\n\t\t\tAppMute: (value?: Value) => runOption(vm, `Strip[${i}]`, \"AppMute\", value),\r\n\t\t\tdevice: {\r\n\t\t\t\tname: (value?: Value) => runOption(vm, `Strip[${i}]`, \"device\", \"name\", value),\r\n\t\t\t\tsr: (value?: Value) => runOption(vm, `Strip[${i}]`, \"device\", \"sr\", value),\r\n\t\t\t\twdm: (value?: Value) => runOption(vm, `Strip[${i}]`, \"device\", \"wdm\", value),\r\n\t\t\t\tks: (value?: Value) => runOption(vm, `Strip[${i}]`, \"device\", \"ks\", value),\r\n\t\t\t\tmme: (value?: Value) => runOption(vm, `Strip[${i}]`, \"device\", \"mme\", value),\r\n\t\t\t\tasio: (value?: Value) => runOption(vm, `Strip[${i}]`, \"device\", \"asio\", value),\r\n\t\t\t},\r\n\t\t}),\r\n\t\tBus: (i: number) => ({\r\n\t\t\tMono: (value?: Value) => runOption(vm, `Bus[${i}]`, \"Mono\", value),\r\n\t\t\tMute: (value?: Value) => runOption(vm, `Bus[${i}]`, \"Mute\", value),\r\n\t\t\tEQ: {\r\n\t\t\t\ton: (value?: Value) => runOption(vm, `Bus[${i}]`, \"EQ\", \"on\", value),\r\n\t\t\t\tAB: (value?: Value) => runOption(vm, `Bus[${i}]`, \"EQ\", \"AB\", value),\r\n\t\t\t\tchannel: (j: number) => ({\r\n\t\t\t\t\tcell: (k: number) => ({\r\n\t\t\t\t\t\ton: (value?: Value) => runOption(vm, `Bus[${i}]`, \"EQ\", `channel[${j}]`, `cell[${k}]`, \"on\", value),\r\n\t\t\t\t\t\ttype: (value?: Value) => runOption(vm, `Bus[${i}]`, \"EQ\", `channel[${j}]`, `cell[${k}]`, \"type\", value),\r\n\t\t\t\t\t\tf: (value?: Value) => runOption(vm, `Bus[${i}]`, \"EQ\", `channel[${j}]`, `cell[${k}]`, \"f\", value),\r\n\t\t\t\t\t\tgain: (value?: Value) => runOption(vm, `Bus[${i}]`, \"EQ\", `channel[${j}]`, `cell[${k}]`, \"gain\", value),\r\n\t\t\t\t\t\tq: (value?: Value) => runOption(vm, `Bus[${i}]`, \"EQ\", `channel[${j}]`, `cell[${k}]`, \"q\", value),\r\n\t\t\t\t\t}),\r\n\t\t\t\t}),\r\n\t\t\t},\r\n\t\t\tGain: (value?: Value) => runOption(vm, `Bus[${i}]`, \"Gain\", value),\r\n\t\t\tLabel: (value?: Value) => runOption(vm, `Bus[${i}]`, \"Label\", value),\r\n\t\t\tmode: {\r\n\t\t\t\tnormal: (value?: Value) => runOption(vm, `Bus[${i}]`, \"mode\", \"normal\", value),\r\n\t\t\t\tAmix: (value?: Value) => runOption(vm, `Bus[${i}]`, \"mode\", \"Amix\", value),\r\n\t\t\t\tBmix: (value?: Value) => runOption(vm, `Bus[${i}]`, \"mode\", \"Bmix\", value),\r\n\t\t\t\tRepeat: (value?: Value) => runOption(vm, `Bus[${i}]`, \"mode\", \"Repeat\", value),\r\n\t\t\t\tComposite: (value?: Value) => runOption(vm, `Bus[${i}]`, \"mode\", \"Composite\", value),\r\n\t\t\t\tTVMix: (value?: Value) => runOption(vm, `Bus[${i}]`, \"mode\", \"TVMix\", value),\r\n\t\t\t\tUpMix21: (value?: Value) => runOption(vm, `Bus[${i}]`, \"mode\", \"UpMix21\", value),\r\n\t\t\t\tUpMix41: (value?: Value) => runOption(vm, `Bus[${i}]`, \"mode\", \"UpMix41\", value),\r\n\t\t\t\tUpMix61: (value?: Value) => runOption(vm, `Bus[${i}]`, \"mode\", \"UpMix61\", value),\r\n\t\t\t\tCenterOnly: (value?: Value) => runOption(vm, `Bus[${i}]`, \"mode\", \"CenterOnly\", value),\r\n\t\t\t\tLFEOnly: (value?: Value) => runOption(vm, `Bus[${i}]`, \"mode\", \"LFEOnly\", value),\r\n\t\t\t\tRearOnly: (value?: Value) => runOption(vm, `Bus[${i}]`, \"mode\", \"RearOnly\", value),\r\n\t\t\t},\r\n\t\t\tFadeTo: (value?: Value) => runOption(vm, `Bus[${i}]`, \"FadeTo\", value),\r\n\t\t\tFadeBy: (value?: Value) => runOption(vm, `Bus[${i}]`, \"FadeBy\", value),\r\n\t\t\tSel: (value?: Value) => runOption(vm, `Bus[${i}]`, \"Sel\", value),\r\n\t\t\tReturnReverb: (value?: Value) => runOption(vm, `Bus[${i}]`, \"ReturnReverb\", value),\r\n\t\t\tReturnDelay: (value?: Value) => runOption(vm, `Bus[${i}]`, \"ReturnDelay\", value),\r\n\t\t\tReturnFx1: (value?: Value) => runOption(vm, `Bus[${i}]`, \"ReturnFx1\", value),\r\n\t\t\tReturnFx2: (value?: Value) => runOption(vm, `Bus[${i}]`, \"ReturnFx2\", value),\r\n\t\t\tMonitor: (value?: Value) => runOption(vm, `Bus[${i}]`, \"Monitor\", value),\r\n\t\t\tVAIO: (value?: Value) => runOption(vm, `Bus[${i}]`, \"VAIO\", value),\r\n\t\t\tdevice: {\r\n\t\t\t\tname: (value?: Value) => runOption(vm, `Bus[${i}]`, \"device\", \"name\", value),\r\n\t\t\t\tsr: (value?: Value) => runOption(vm, `Bus[${i}]`, \"device\", \"sr\", value),\r\n\t\t\t\twdm: (value?: Value) => runOption(vm, `Bus[${i}]`, \"device\", \"wdm\", value),\r\n\t\t\t\tks: (value?: Value) => runOption(vm, `Bus[${i}]`, \"device\", \"ks\", value),\r\n\t\t\t\tmme: (value?: Value) => runOption(vm, `Bus[${i}]`, \"device\", \"mme\", value),\r\n\t\t\t\tasio: (value?: Value) => runOption(vm, `Bus[${i}]`, \"device\", \"asio\", value),\r\n\t\t\t},\r\n\t\t}),\r\n\t\tFx: {\r\n\t\t\tReverb: {\r\n\t\t\t\tOn: (value?: Value) => runOption(vm, \"Fx\", \"Reverb\", \"On\", value),\r\n\t\t\t\tAB: (value?: Value) => runOption(vm, \"Fx\", \"Reverb\", \"AB\", value),\r\n\t\t\t},\r\n\t\t\tDelay: {\r\n\t\t\t\tOn: (value?: Value) => runOption(vm, \"Fx\", \"Delay\", \"On\", value),\r\n\t\t\t\tAB: (value?: Value) => runOption(vm, \"Fx\", \"Delay\", \"AB\", value),\r\n\t\t\t},\r\n\t\t},\r\n\t\tpatch: {\r\n\t\t\tasio: (i: number) => (value?: Value) => runOption(vm, \"patch\", `asio[${i}]`, value),\r\n\t\t\tOutA2: (i: number) => (value?: Value) => runOption(vm, \"patch\", `OutA2[${i}]`, value),\r\n\t\t\tOutA3: (i: number) => (value?: Value) => runOption(vm, \"patch\", `OutA3[${i}]`, value),\r\n\t\t\tOutA4: (i: number) => (value?: Value) => runOption(vm, \"patch\", `OutA4[${i}]`, value),\r\n\t\t\tOutA5: (i: number) => (value?: Value) => runOption(vm, \"patch\", `OutA5[${i}]`, value),\r\n\t\t\tcomposite: (j: number) => (value?: Value) => runOption(vm, \"Patch\", `composite[${j}]`, value),\r\n\t\t\tinsert: (k: number) => (value?: Value) => runOption(vm, \"Patch\", `insert[${k}]`, value),\r\n\t\t\tPostFaderComposite: (value?: Value) => runOption(vm, \"Patch\", \"PostFaderComposite\", value),\r\n\t\t\tPostFxInsert: (value?: Value) => runOption(vm, \"Patch\", \"PostFxInsert\", value),\r\n\t\t},\r\n\t\tOption: {\r\n\t\t\tsr: (value?: Value) => runOption(vm, \"Option\", \"sr\", value),\r\n\t\t\tASIOsr: (value?: Value) => runOption(vm, \"Option\", \"ASIOsr\", value),\r\n\t\t\tdelay: (i: number) => (value?: Value) => runOption(vm, \"Option\", `delay[${i}]`, value),\r\n\t\t\tbuffer: {\r\n\t\t\t\tmme: (value?: Value) => runOption(vm, \"Option\", \"buffer\", \"mme\", value),\r\n\t\t\t\twdm: (value?: Value) => runOption(vm, \"Option\", \"buffer\", \"wdm\", value),\r\n\t\t\t\tks: (value?: Value) => runOption(vm, \"Option\", \"buffer\", \"ks\", value),\r\n\t\t\t\tasio: (value?: Value) => runOption(vm, \"Option\", \"buffer\", \"asio\", value),\r\n\t\t\t},\r\n\t\t\tmode: {\r\n\t\t\t\texclusif: (value?: Value) => runOption(vm, \"Option\", \"mode\", \"exclusif\", value),\r\n\t\t\t\tswift: (value?: Value) => runOption(vm, \"Option\", \"mode\", \"swift\", value),\r\n\t\t\t},\r\n\t\t\tMonitorOnSEL: (value?: Value) => runOption(vm, \"Option\", \"MonitorOnSEL\", value),\r\n\t\t\tSliderMode: (value?: Value) => runOption(vm, \"Option\", \"SliderMode\", value),\r\n\t\t},\r\n\t\trecorder: {\r\n\t\t\tstop: (value?: Value) => runOption(vm, \"recorder\", \"stop\", value),\r\n\t\t\tplay: (value?: Value) => runOption(vm, \"recorder\", \"play\", value),\r\n\t\t\treplay: (value?: Value) => runOption(vm, \"recorder\", \"replay\", value),\r\n\t\t\tff: (value?: Value) => runOption(vm, \"recorder\", \"ff\", value),\r\n\t\t\trew: (value?: Value) => runOption(vm, \"recorder\", \"rew\", value),\r\n\t\t\tA1: (value?: Value) => runOption(vm, \"recorder\", \"A1\", value),\r\n\t\t\tA2: (value?: Value) => runOption(vm, \"recorder\", \"A2\", value),\r\n\t\t\tA3: (value?: Value) => runOption(vm, \"recorder\", \"A3\", value),\r\n\t\t\tA4: (value?: Value) => runOption(vm, \"recorder\", \"A4\", value),\r\n\t\t\tA5: (value?: Value) => runOption(vm, \"recorder\", \"A5\", value),\r\n\t\t\tB1: (value?: Value) => runOption(vm, \"recorder\", \"B1\", value),\r\n\t\t\tB2: (value?: Value) => runOption(vm, \"recorder\", \"B2\", value),\r\n\t\t\tB3: (value?: Value) => runOption(vm, \"recorder\", \"B3\", value),\r\n\t\t\trecord: (value?: Value) => runOption(vm, \"recorder\", \"record\", value),\r\n\t\t\tpause: (value?: Value) => runOption(vm, \"recorder\", \"pause\", value),\r\n\t\t\tgoto: (value?: Value) => runOption(vm, \"Recorder\", \"goto\", value),\r\n\t\t\tload: (value?: Value) => runOption(vm, \"Recorder\", \"load\", value),\r\n\t\t\tsamplerate: (value?: Value) => runOption(vm, \"Recorder\", \"samplerate\", value),\r\n\t\t\tArmStrip: (i: number) => (value?: Value) => runOption(vm, \"Recorder\", `ArmStrip(${i})`, value),\r\n\t\t\tArmBus: (i: number) => (value?: Value) => runOption(vm, \"Recorder\", `ArmBus(${i})`, value),\r\n\t\t\tmode: {\r\n\t\t\t\trecbus: (value?: Value) => runOption(vm, \"Recorder\", \"mode\", \"recbus\", value),\r\n\t\t\t\tPlayOnLoad: (value?: Value) => runOption(vm, \"Recorder\", \"mode\", \"PlayOnLoad\", value),\r\n\t\t\t\tLoop: (value?: Value) => runOption(vm, \"Recorder\", \"mode\", \"Loop\", value),\r\n\t\t\t\tMultiTrack: (value?: Value) => runOption(vm, \"Recorder\", \"mode\", \"MultiTrack\", value),\r\n\t\t\t},\r\n\t\t\tbitResolution: (value?: Value) => runOption(vm, \"Recorder\", \"bitResolution\", value),\r\n\t\t\tChannel: (value?: Value) => runOption(vm, \"Recorder\", \"Channel\", value),\r\n\t\t\tkbps: (value?: Value) => runOption(vm, \"Recorder\", \"kbps\", value),\r\n\t\t\tFileType: (value?: Value) => runOption(vm, \"Recorder\", \"FileType\", value),\r\n\t\t\tgain: (value?: Value) => runOption(vm, \"Recorder\", \"gain\", value),\r\n\t\t},\r\n\t\tvban: {\r\n\t\t\tEnable: (value?: Value) => runOption(vm, \"vban\", \"Enable\", value),\r\n\t\t\tinstream: (i: number) => ({\r\n\t\t\t\ton: (value?: Value) => runOption(vm, \"vban\", `instream[${i}]`, \"on\", value),\r\n\t\t\t\tname: (value?: Value) => runOption(vm, \"vban\", `instream[${i}]`, \"name\", value),\r\n\t\t\t\tip: (value?: Value) => runOption(vm, \"vban\", `instream[${i}]`, \"ip\", value),\r\n\t\t\t\tport: (value?: Value) => runOption(vm, \"vban\", `instream[${i}]`, \"port\", value),\r\n\t\t\t\tsr: (value?: Value) => runOption(vm, \"vban\", `instream[${i}]`, \"sr\", value),\r\n\t\t\t\tchannel: (value?: Value) => runOption(vm, \"vban\", `instream[${i}]`, \"channel\", value),\r\n\t\t\t\tbit: (value?: Value) => runOption(vm, \"vban\", `instream[${i}]`, \"bit\", value),\r\n\t\t\t\tquality: (value?: Value) => runOption(vm, \"vban\", `instream[${i}]`, \"quality\", value),\r\n\t\t\t\troute: (value?: Value) => runOption(vm, \"vban\", `instream[${i}]`, \"route\", value),\r\n\t\t\t}),\r\n\t\t\toutstream: (i: number) => ({\r\n\t\t\t\ton: (value?: Value) => runOption(vm, \"vban\", `outstream[${i}]`, \"on\", value),\r\n\t\t\t\tname: (value?: Value) => runOption(vm, \"vban\", `outstream[${i}]`, \"name\", value),\r\n\t\t\t\tip: (value?: Value) => runOption(vm, \"vban\", `outstream[${i}]`, \"ip\", value),\r\n\t\t\t\tport: (value?: Value) => runOption(vm, \"vban\", `outstream[${i}]`, \"port\", value),\r\n\t\t\t\tsr: (value?: Value) => runOption(vm, \"vban\", `outstream[${i}]`, \"sr\", value),\r\n\t\t\t\tchannel: (value?: Value) => runOption(vm, \"vban\", `outstream[${i}]`, \"channel\", value),\r\n\t\t\t\tbit: (value?: Value) => runOption(vm, \"vban\", `outstream[${i}]`, \"bit\", value),\r\n\t\t\t\tquality: (value?: Value) => runOption(vm, \"vban\", `outstream[${i}]`, \"quality\", value),\r\n\t\t\t\troute: (value?: Value) => runOption(vm, \"vban\", `outstream[${i}]`, \"route\", value),\r\n\t\t\t}),\r\n\t\t},\r\n\t};\r\n}\r\n"],"names":["libVM","instance","runOption","vm","getOption","args","slice","call","arguments","isConnected","Error","value","length","pop","_temp4","undefined","Promise","resolve","setOption","join","then","_temp3","e","reject","Voicemeeter","_this","isInitialised","outputDevices","inputDevices","version","type","eventPool","stringParameters","connect","VBVMR_Login","getVoicemeeterType","getVoicemeeterVersion","setInterval","checkPropertyChange","disconnect","VBVMR_Logout","_unused","updateDeviceList","outputDeviceNumber","VBVMR_Output_GetDeviceNumber","i","hardwareIdPtr","Buffer","alloc","namePtr","typePtr","VBVMR_Output_GetDeviceDescA","push","name","toString","replace","hardwareId","inputDeviceNumber","VBVMR_Input_GetDeviceNumber","VBVMR_Input_GetDeviceDescA","isParametersDirty","VBVMR_IsParametersDirty","parameters","this","Command","Shutdown","Show","Restart","Eject","Reset","Save","Load","Lock","Button","State","StateOnly","Trigger","Color","DialogShow","VBANCHAT","SaveBUSEQ","j","LoadBUSEQ","SaveStripEQ","LoadStripEQ","Preset","k","Recall","Strip","Mono","Mute","Solo","MC","Gain","GainLayer","Pan_x","Pan_y","Color_x","Color_y","fx_x","fx_y","Audibility","Comp","GainIn","Ratio","Threshold","Attack","Release","Knee","GainOut","MakeUp","Gate","Damping","BPSidechain","Hold","Denoiser","Pitch","On","DryWet","PitchValue","LoFormant","MedFormant","HiFormant","Karaoke","Limit","EQGain1","EQGain2","EQGain3","Label","A1","A2","A3","A4","A5","B1","B2","B3","FadeTo","FadeBy","Reverb","Delay","Fx1","Fx2","PostReverb","PostDelay","PostFx1","PostFx2","EQ","on","AB","channel","cell","f","gain","q","VAIO","App","AppGain","AppMute","device","sr","wdm","ks","mme","asio","Bus","mode","normal","Amix","Bmix","Repeat","Composite","TVMix","UpMix21","UpMix41","UpMix61","CenterOnly","LFEOnly","RearOnly","Sel","ReturnReverb","ReturnDelay","ReturnFx1","ReturnFx2","Monitor","Fx","patch","OutA2","OutA3","OutA4","OutA5","composite","insert","PostFaderComposite","PostFxInsert","Option","ASIOsr","delay","buffer","exclusif","swift","MonitorOnSEL","SliderMode","recorder","stop","play","replay","ff","rew","record","pause","goto","load","samplerate","ArmStrip","ArmBus","recbus","PlayOnLoad","Loop","MultiTrack","bitResolution","Channel","kbps","FileType","vban","Enable","instream","ip","port","bit","quality","route","outstream","attachChangeEvent","fn","parameterName","some","str","includes","strPtr","VBVMR_GetParameterStringA","String","fromCharCode","apply","split","filter","valuePtr","VBVMR_GetParameterFloat","option","script","fill","write","VBVMR_SetParameters","setTimeout","forEach","eventListener","VBVMR_GetVoicemeeterType","versionPtr","VBVMR_GetVoicemeeterVersion","getLevel","levelPtr","VBVMR_GetLevel","init","regKey","Registry","hive","HKLM","key","values","err","items","unistallerPath","find","fileNameIndex","lastIndexOf","DLLHandler","dllPath","lib","koffi","func","VBVMR_RunVoicemeeter","get"],"mappings":"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"}