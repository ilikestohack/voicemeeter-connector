import e from"koffi";import t from"winreg";function r(e,...t){if(!e.isConnected)throw new Error("Not connected ");const r=t[t.length-1];return t.pop(),void 0!==r&&e.setOption(`${t.join(".")}=${r}`),function(e,t){return e.getOption(t.join("."))}(e,t)}let o,i;class n{constructor(){var e;this.isConnected=!1,this.isInitialised=!1,this.outputDevices=[],this.inputDevices=[],this.version="",this.type=void 0,this.eventPool=[],this.stringParameters=["Label","FadeTo","FadeBy","AppGain","AppMute","name","ip"],this.connect=()=>{if(!this.isInitialised)throw new Error("Await the initialisation before connect");if(!this.isConnected){if(0===o.VBVMR_Login())return this.isConnected=!0,this.type=this.getVoicemeeterType(),this.version=this.getVoicemeeterVersion(),void setInterval(this.checkPropertyChange,10);throw this.isConnected=!1,new Error("Connection failed")}},this.disconnect=()=>{if(!this.isConnected)throw new Error("Not connected ");try{if(0===o.VBVMR_Logout())return void(this.isConnected=!1);throw new Error("Disconnect failed")}catch(e){throw new Error("Disconnect failed")}},this.updateDeviceList=()=>{if(!this.isConnected)throw new Error("Not connected ");this.outputDevices=[],this.inputDevices=[];const e=o.VBVMR_Output_GetDeviceNumber();for(let t=0;t<e;t++){const e=Buffer.alloc(256),r=Buffer.alloc(256),i=[0];o.VBVMR_Output_GetDeviceDescA(t,i,r,e),this.outputDevices.push({name:r.toString().replace(/\u0000+$/g,""),hardwareId:e.toString().replace(/\u0000+$/g,""),type:i[0]})}const t=o.VBVMR_Input_GetDeviceNumber();for(let e=0;e<t;e++){const t=Buffer.alloc(256),r=Buffer.alloc(256),i=[0];o.VBVMR_Input_GetDeviceDescA(e,i,r,t),this.inputDevices.push({name:r.toString().replace(/\u0000+$/g,""),hardwareId:t.toString().replace(/\u0000+$/g,""),type:i[0]})}},this.isParametersDirty=()=>o.VBVMR_IsParametersDirty(),this.parameters=(e=this,{Command:{Shutdown:t=>r(e,"Command","Shutdown",t),Show:t=>r(e,"Command","Show",t),Restart:t=>r(e,"Command","Restart",t),Eject:t=>r(e,"Command","Eject",t),Reset:t=>r(e,"Command","Reset",t),Save:t=>r(e,"Command","Save",t),Load:t=>r(e,"Command","Load",t),Lock:t=>r(e,"Command","Lock",t),Button:t=>({State:o=>r(e,"Command",`Button[${t}]`,"State",o),StateOnly:o=>r(e,"Command",`Button[${t}]`,"StateOnly",o),Trigger:o=>r(e,"Command",`Button[${t}]`,"Trigger",o),Color:o=>r(e,"Command",`Button[${t}]`,"Color",o)}),DialogShow:{VBANCHAT:t=>r(e,"Command","DialogShow","VBANCHAT",t)},SaveBUSEQ:t=>o=>r(e,"Command",`SaveBUSEQ[${t}]`,o),LoadBUSEQ:t=>o=>r(e,"Command",`LoadBUSEQ[${t}]`,o),SaveStripEQ:t=>o=>r(e,"Command",`SaveStripEQ[${t}]`,o),LoadStripEQ:t=>o=>r(e,"Command",`LoadStripEQ[${t}]`,o),Preset:t=>({Recall:o=>r(e,"Command",`Preset[${t}]`,"Recall",o)})},Strip:t=>({Mono:o=>r(e,`Strip[${t}]`,"Mono",o),Mute:o=>r(e,`Strip[${t}]`,"Mute",o),Solo:o=>r(e,`Strip[${t}]`,"Solo",o),MC:o=>r(e,`Strip[${t}]`,"MC",o),Gain:o=>r(e,`Strip[${t}]`,"Gain",o),GainLayer:o=>i=>r(e,`Strip[${t}]`,`GainLayer[${o}]`,i),Pan_x:o=>r(e,`Strip[${t}]`,"Pan_x",o),Pan_y:o=>r(e,`Strip[${t}]`,"Pan_y",o),Color_x:o=>r(e,`Strip[${t}]`,"Color_x",o),Color_y:o=>r(e,`Strip[${t}]`,"Color_y",o),fx_x:o=>r(e,`Strip[${t}]`,"fx_x",o),fx_y:o=>r(e,`Strip[${t}]`,"fx_y",o),Audibility:o=>r(e,`Strip[${t}]`,"Audibility",o),Comp:{GainIn:o=>r(e,`Strip[${t}]`,"Comp","GainIn",o),Ratio:o=>r(e,`Strip[${t}]`,"Comp","Ratio",o),Threshold:o=>r(e,`Strip[${t}]`,"Comp","Threshold",o),Attack:o=>r(e,`Strip[${t}]`,"Comp","Attack",o),Release:o=>r(e,`Strip[${t}]`,"Comp","Release",o),Knee:o=>r(e,`Strip[${t}]`,"Comp","Knee",o),GainOut:o=>r(e,`Strip[${t}]`,"Comp","GainOut",o),MakeUp:o=>r(e,`Strip[${t}]`,"Comp","MakeUp",o)},Gate:{Threshold:o=>r(e,`Strip[${t}]`,"Gate","Threshold",o),Damping:o=>r(e,`Strip[${t}]`,"Gate","Damping",o),BPSidechain:o=>r(e,`Strip[${t}]`,"Gate","BPSidechain",o),Attack:o=>r(e,`Strip[${t}]`,"Gate","Attack",o),Hold:o=>r(e,`Strip[${t}]`,"Gate","Hold",o),Release:o=>r(e,`Strip[${t}]`,"Gate","Release",o)},Denoiser:{Threshold:o=>r(e,`Strip[${t}]`,"Denoiser","Threshold",o)},Pitch:{On:o=>r(e,`Strip[${t}]`,"Pitch","On",o),DryWet:o=>r(e,`Strip[${t}]`,"Pitch","DryWet",o),PitchValue:o=>r(e,`Strip[${t}]`,"Pitch","PitchValue",o),LoFormant:o=>r(e,`Strip[${t}]`,"Pitch","LoFormant",o),MedFormant:o=>r(e,`Strip[${t}]`,"Pitch","MedFormant",o),HiFormant:o=>r(e,`Strip[${t}]`,"Pitch","HiFormant",o)},Karaoke:o=>r(e,`Strip[${t}]`,"Karaoke",o),Limit:o=>r(e,`Strip[${t}]`,"Limit",o),EQGain1:o=>r(e,`Strip[${t}]`,"EQGain1",o),EQGain2:o=>r(e,`Strip[${t}]`,"EQGain2",o),EQGain3:o=>r(e,`Strip[${t}]`,"EQGain3",o),Label:o=>r(e,`Strip[${t}]`,"Label",o),A1:o=>r(e,`Strip[${t}]`,"A1",o),A2:o=>r(e,`Strip[${t}]`,"A2",o),A3:o=>r(e,`Strip[${t}]`,"A3",o),A4:o=>r(e,`Strip[${t}]`,"A4",o),A5:o=>r(e,`Strip[${t}]`,"A5",o),B1:o=>r(e,`Strip[${t}]`,"B1",o),B2:o=>r(e,`Strip[${t}]`,"B2",o),B3:o=>r(e,`Strip[${t}]`,"B3",o),FadeTo:o=>r(e,`Strip[${t}]`,"FadeTo",o),FadeBy:o=>r(e,`Strip[${t}]`,"FadeBy",o),Reverb:o=>r(e,`Strip[${t}]`,"Reverb",o),Delay:o=>r(e,`Strip[${t}]`,"Delay",o),Fx1:o=>r(e,`Strip[${t}]`,"Fx1",o),Fx2:o=>r(e,`Strip[${t}]`,"Fx2",o),PostReverb:o=>r(e,`Strip[${t}]`,"PostReverb",o),PostDelay:o=>r(e,`Strip[${t}]`,"PostDelay",o),PostFx1:o=>r(e,`Strip[${t}]`,"PostFx1",o),PostFx2:o=>r(e,`Strip[${t}]`,"PostFx2",o),EQ:{on:o=>r(e,`Strip[${t}]`,"EQ","on",o),AB:o=>r(e,`Strip[${t}]`,"EQ","AB",o),channel:o=>({cell:i=>({on:n=>r(e,`Strip[${t}]`,"EQ",`channel[${o}]`,`cell[${i}]`,"on",n),type:n=>r(e,`Strip[${t}]`,"EQ",`channel[${o}]`,`cell[${i}]`,"type",n),f:n=>r(e,`Strip[${t}]`,"EQ",`channel[${o}]`,`cell[${i}]`,"f",n),gain:n=>r(e,`Strip[${t}]`,"EQ",`channel[${o}]`,`cell[${i}]`,"gain",n),q:n=>r(e,`Strip[${t}]`,"EQ",`channel[${o}]`,`cell[${i}]`,"q",n)})})},VAIO:o=>r(e,`Strip[${t}]`,"VAIO",o),App:o=>({Gain:i=>r(e,`Strip[${t}]`,`App[${o}]`,"Gain",i),Mute:i=>r(e,`Strip[${t}]`,`App[${o}]`,"Mute",i)}),AppGain:o=>r(e,`Strip[${t}]`,"AppGain",o),AppMute:o=>r(e,`Strip[${t}]`,"AppMute",o),device:{name:o=>r(e,`Strip[${t}]`,"device","name",o),sr:o=>r(e,`Strip[${t}]`,"device","sr",o),wdm:o=>r(e,`Strip[${t}]`,"device","wdm",o),ks:o=>r(e,`Strip[${t}]`,"device","ks",o),mme:o=>r(e,`Strip[${t}]`,"device","mme",o),asio:o=>r(e,`Strip[${t}]`,"device","asio",o)}}),Bus:t=>({Mono:o=>r(e,`Bus[${t}]`,"Mono",o),Mute:o=>r(e,`Bus[${t}]`,"Mute",o),EQ:{on:o=>r(e,`Bus[${t}]`,"EQ","on",o),AB:o=>r(e,`Bus[${t}]`,"EQ","AB",o),channel:o=>({cell:i=>({on:n=>r(e,`Bus[${t}]`,"EQ",`channel[${o}]`,`cell[${i}]`,"on",n),type:n=>r(e,`Bus[${t}]`,"EQ",`channel[${o}]`,`cell[${i}]`,"type",n),f:n=>r(e,`Bus[${t}]`,"EQ",`channel[${o}]`,`cell[${i}]`,"f",n),gain:n=>r(e,`Bus[${t}]`,"EQ",`channel[${o}]`,`cell[${i}]`,"gain",n),q:n=>r(e,`Bus[${t}]`,"EQ",`channel[${o}]`,`cell[${i}]`,"q",n)})})},Gain:o=>r(e,`Bus[${t}]`,"Gain",o),Label:o=>r(e,`Bus[${t}]`,"Label",o),mode:{normal:o=>r(e,`Bus[${t}]`,"mode","normal",o),Amix:o=>r(e,`Bus[${t}]`,"mode","Amix",o),Bmix:o=>r(e,`Bus[${t}]`,"mode","Bmix",o),Repeat:o=>r(e,`Bus[${t}]`,"mode","Repeat",o),Composite:o=>r(e,`Bus[${t}]`,"mode","Composite",o),TVMix:o=>r(e,`Bus[${t}]`,"mode","TVMix",o),UpMix21:o=>r(e,`Bus[${t}]`,"mode","UpMix21",o),UpMix41:o=>r(e,`Bus[${t}]`,"mode","UpMix41",o),UpMix61:o=>r(e,`Bus[${t}]`,"mode","UpMix61",o),CenterOnly:o=>r(e,`Bus[${t}]`,"mode","CenterOnly",o),LFEOnly:o=>r(e,`Bus[${t}]`,"mode","LFEOnly",o),RearOnly:o=>r(e,`Bus[${t}]`,"mode","RearOnly",o)},FadeTo:o=>r(e,`Bus[${t}]`,"FadeTo",o),FadeBy:o=>r(e,`Bus[${t}]`,"FadeBy",o),Sel:o=>r(e,`Bus[${t}]`,"Sel",o),ReturnReverb:o=>r(e,`Bus[${t}]`,"ReturnReverb",o),ReturnDelay:o=>r(e,`Bus[${t}]`,"ReturnDelay",o),ReturnFx1:o=>r(e,`Bus[${t}]`,"ReturnFx1",o),ReturnFx2:o=>r(e,`Bus[${t}]`,"ReturnFx2",o),Monitor:o=>r(e,`Bus[${t}]`,"Monitor",o),VAIO:o=>r(e,`Bus[${t}]`,"VAIO",o),device:{name:o=>r(e,`Bus[${t}]`,"device","name",o),sr:o=>r(e,`Bus[${t}]`,"device","sr",o),wdm:o=>r(e,`Bus[${t}]`,"device","wdm",o),ks:o=>r(e,`Bus[${t}]`,"device","ks",o),mme:o=>r(e,`Bus[${t}]`,"device","mme",o),asio:o=>r(e,`Bus[${t}]`,"device","asio",o)}}),Fx:{Reverb:{On:t=>r(e,"Fx","Reverb","On",t),AB:t=>r(e,"Fx","Reverb","AB",t)},Delay:{On:t=>r(e,"Fx","Delay","On",t),AB:t=>r(e,"Fx","Delay","AB",t)}},patch:{asio:t=>o=>r(e,"patch",`asio[${t}]`,o),OutA2:t=>o=>r(e,"patch",`OutA2[${t}]`,o),OutA3:t=>o=>r(e,"patch",`OutA3[${t}]`,o),OutA4:t=>o=>r(e,"patch",`OutA4[${t}]`,o),OutA5:t=>o=>r(e,"patch",`OutA5[${t}]`,o),composite:t=>o=>r(e,"Patch",`composite[${t}]`,o),insert:t=>o=>r(e,"Patch",`insert[${t}]`,o),PostFaderComposite:t=>r(e,"Patch","PostFaderComposite",t),PostFxInsert:t=>r(e,"Patch","PostFxInsert",t)},Option:{sr:t=>r(e,"Option","sr",t),ASIOsr:t=>r(e,"Option","ASIOsr",t),delay:t=>o=>r(e,"Option",`delay[${t}]`,o),buffer:{mme:t=>r(e,"Option","buffer","mme",t),wdm:t=>r(e,"Option","buffer","wdm",t),ks:t=>r(e,"Option","buffer","ks",t),asio:t=>r(e,"Option","buffer","asio",t)},mode:{exclusif:t=>r(e,"Option","mode","exclusif",t),swift:t=>r(e,"Option","mode","swift",t)},MonitorOnSEL:t=>r(e,"Option","MonitorOnSEL",t),SliderMode:t=>r(e,"Option","SliderMode",t)},recorder:{stop:t=>r(e,"recorder","stop",t),play:t=>r(e,"recorder","play",t),replay:t=>r(e,"recorder","replay",t),ff:t=>r(e,"recorder","ff",t),rew:t=>r(e,"recorder","rew",t),A1:t=>r(e,"recorder","A1",t),A2:t=>r(e,"recorder","A2",t),A3:t=>r(e,"recorder","A3",t),A4:t=>r(e,"recorder","A4",t),A5:t=>r(e,"recorder","A5",t),B1:t=>r(e,"recorder","B1",t),B2:t=>r(e,"recorder","B2",t),B3:t=>r(e,"recorder","B3",t),record:t=>r(e,"recorder","record",t),pause:t=>r(e,"recorder","pause",t),goto:t=>r(e,"Recorder","goto",t),load:t=>r(e,"Recorder","load",t),samplerate:t=>r(e,"Recorder","samplerate",t),ArmStrip:t=>o=>r(e,"Recorder",`ArmStrip(${t})`,o),ArmBus:t=>o=>r(e,"Recorder",`ArmBus(${t})`,o),mode:{recbus:t=>r(e,"Recorder","mode","recbus",t),PlayOnLoad:t=>r(e,"Recorder","mode","PlayOnLoad",t),Loop:t=>r(e,"Recorder","mode","Loop",t),MultiTrack:t=>r(e,"Recorder","mode","MultiTrack",t)},bitResolution:t=>r(e,"Recorder","bitResolution",t),Channel:t=>r(e,"Recorder","Channel",t),kbps:t=>r(e,"Recorder","kbps",t),FileType:t=>r(e,"Recorder","FileType",t),gain:t=>r(e,"Recorder","gain",t)},vban:{Enable:t=>r(e,"vban","Enable",t),instream:t=>({on:o=>r(e,"vban",`instream[${t}]`,"on",o),name:o=>r(e,"vban",`instream[${t}]`,"name",o),ip:o=>r(e,"vban",`instream[${t}]`,"ip",o),port:o=>r(e,"vban",`instream[${t}]`,"port",o),sr:o=>r(e,"vban",`instream[${t}]`,"sr",o),channel:o=>r(e,"vban",`instream[${t}]`,"channel",o),bit:o=>r(e,"vban",`instream[${t}]`,"bit",o),quality:o=>r(e,"vban",`instream[${t}]`,"quality",o),route:o=>r(e,"vban",`instream[${t}]`,"route",o)}),outstream:t=>({on:o=>r(e,"vban",`outstream[${t}]`,"on",o),name:o=>r(e,"vban",`outstream[${t}]`,"name",o),ip:o=>r(e,"vban",`outstream[${t}]`,"ip",o),port:o=>r(e,"vban",`outstream[${t}]`,"port",o),sr:o=>r(e,"vban",`outstream[${t}]`,"sr",o),channel:o=>r(e,"vban",`outstream[${t}]`,"channel",o),bit:o=>r(e,"vban",`outstream[${t}]`,"bit",o),quality:o=>r(e,"vban",`outstream[${t}]`,"quality",o),route:o=>r(e,"vban",`outstream[${t}]`,"route",o)})}}),this.attachChangeEvent=e=>{this.eventPool.push(e)},this.getOption=e=>{if(!this.isConnected)throw new Error("Not correct connected ");if(this.stringParameters.some(t=>e.includes(t))){const t=Buffer.alloc(512);return o.VBVMR_GetParameterStringA(e,t),String.fromCharCode.apply(null,t).split("").filter(e=>"\0"!==e).join("")}const t=[0];return o.VBVMR_GetParameterFloat(e,t),t[0]},this.setOption=e=>{const t=Buffer.alloc(e.length+1);return t.fill(0).write(e),o.VBVMR_SetParameters(t),new Promise(e=>setTimeout(e,200))},this.checkPropertyChange=()=>{1===this.isParametersDirty()&&this.eventPool.forEach(e=>{e()})},this.getVoicemeeterType=()=>{const e=[0];if(0!==o.VBVMR_GetVoicemeeterType(e))throw new Error("running failed");switch(e[0]){case 1:return"voicemeeter";case 2:return"voicemeeterBanana";case 3:return"voicemeeterPotato";default:throw new Error("Voicemeeter seems not to be installed")}},this.getVoicemeeterVersion=()=>{const e=[0];if(0!==o.VBVMR_GetVoicemeeterVersion(e))throw new Error("running failed");return((4278190080&e[0])>>24)+"."+((16711680&e[0])>>16)+"."+((65280&e[0])>>8)+"."+(255&e[0])},this.getLevel=(e,t)=>{const r=[0];return o.VBVMR_GetLevel(e,t,r),r[0]}}static async init(){const r=await(async()=>{const e=new t({hive:t.HKLM,key:"\\SOFTWARE\\WOW6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\VB:Voicemeeter {17359A74-1236-5467}"});return new Promise(t=>{e.values((e,r)=>{if(e)throw new Error(e);const o=r.find(e=>"UninstallString"===e.name).value,i=o.lastIndexOf("\\");t(o.slice(0,i))})})})();return new Promise(t=>{i||(i=new n);const a=e.load(`${r}/VoicemeeterRemote64.dll`);o={VBVMR_Login:a.func("long __stdcall VBVMR_Login(void)"),VBVMR_Logout:a.func("long __stdcall VBVMR_Logout(void)"),VBVMR_RunVoicemeeter:a.func("long __stdcall VBVMR_RunVoicemeeter(long mode)"),VBVMR_IsParametersDirty:a.func("long __stdcall VBVMR_IsParametersDirty(void)"),VBVMR_GetLevel:a.func("long __stdcall VBVMR_GetLevel(long type, long channel, _Out_ float* value)"),VBVMR_GetParameterFloat:a.func("long __stdcall VBVMR_GetParameterFloat(const char* param, _Out_ float* value)"),VBVMR_GetParameterStringA:a.func("long __stdcall VBVMR_GetParameterStringA(const char* param, _Out_ char* value)"),VBVMR_SetParameters:a.func("long __stdcall VBVMR_SetParameters(const char* param)"),VBVMR_Output_GetDeviceNumber:a.func("long __stdcall VBVMR_Output_GetDeviceNumber(void)"),VBVMR_Output_GetDeviceDescA:a.func("long __stdcall VBVMR_Output_GetDeviceDescA(long index, _Out_ long* type, _Out_ char* name, _Out_ char* hardwareId)"),VBVMR_Input_GetDeviceNumber:a.func("long __stdcall VBVMR_Input_GetDeviceNumber(void)"),VBVMR_Input_GetDeviceDescA:a.func("long __stdcall VBVMR_Input_GetDeviceDescA(long index, long* type, char* name, char* hardwareId)"),VBVMR_GetVoicemeeterType:a.func("long __stdcall VBVMR_GetVoicemeeterType(_Out_ long* type)"),VBVMR_GetVoicemeeterVersion:a.func("long __stdcall VBVMR_GetVoicemeeterVersion(_Out_ long* version)")},i.isInitialised=!0,t(i)})}get $outputDevices(){return this.outputDevices}get $inputDevices(){return this.inputDevices}get $version(){return this.version}get $type(){return this.type}}var a={__proto__:null};export{n as Voicemeeter,a as types};
//# sourceMappingURL=index.modern.js.map
